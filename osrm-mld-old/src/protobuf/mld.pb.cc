// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mld.proto

#include "mld.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_mld_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mld_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CellData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mld_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EdgeData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mld_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LevelData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mld_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Metric;
}  // namespace protobuf_mld_2eproto
namespace pbmld {
class LevelDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelData>
      _instance;
} _LevelData_default_instance_;
class PartitionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Partitions>
      _instance;
} _Partitions_default_instance_;
class CellDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CellData>
      _instance;
} _CellData_default_instance_;
class CellsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cells>
      _instance;
} _Cells_default_instance_;
class MetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metric>
      _instance;
} _Metric_default_instance_;
class MetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metrics>
      _instance;
} _Metrics_default_instance_;
class EdgeDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EdgeData>
      _instance;
} _EdgeData_default_instance_;
class QueryGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryGraph>
      _instance;
} _QueryGraph_default_instance_;
}  // namespace pbmld
namespace protobuf_mld_2eproto {
static void InitDefaultsLevelData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbmld::_LevelData_default_instance_;
    new (ptr) ::pbmld::LevelData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmld::LevelData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelData}, {}};

static void InitDefaultsPartitions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbmld::_Partitions_default_instance_;
    new (ptr) ::pbmld::Partitions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmld::Partitions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Partitions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPartitions}, {
      &protobuf_mld_2eproto::scc_info_LevelData.base,}};

static void InitDefaultsCellData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbmld::_CellData_default_instance_;
    new (ptr) ::pbmld::CellData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmld::CellData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CellData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCellData}, {}};

static void InitDefaultsCells() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbmld::_Cells_default_instance_;
    new (ptr) ::pbmld::Cells();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmld::Cells::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Cells =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCells}, {
      &protobuf_mld_2eproto::scc_info_CellData.base,}};

static void InitDefaultsMetric() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbmld::_Metric_default_instance_;
    new (ptr) ::pbmld::Metric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmld::Metric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Metric =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetric}, {}};

static void InitDefaultsMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbmld::_Metrics_default_instance_;
    new (ptr) ::pbmld::Metrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmld::Metrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Metrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetrics}, {
      &protobuf_mld_2eproto::scc_info_Metric.base,}};

static void InitDefaultsEdgeData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbmld::_EdgeData_default_instance_;
    new (ptr) ::pbmld::EdgeData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmld::EdgeData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EdgeData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEdgeData}, {}};

static void InitDefaultsQueryGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbmld::_QueryGraph_default_instance_;
    new (ptr) ::pbmld::QueryGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmld::QueryGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryGraph}, {
      &protobuf_mld_2eproto::scc_info_EdgeData.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LevelData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Partitions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CellData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cells.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Metric.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Metrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EdgeData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryGraph.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::LevelData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::LevelData, number_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::LevelData, lidx_to_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::LevelData, lidx_to_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::LevelData, bit_to_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Partitions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Partitions, level_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Partitions, partition_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::CellData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::CellData, value_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::CellData, source_boundary_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::CellData, destination_boundary_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::CellData, source_node_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::CellData, destination_node_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Cells, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Cells, source_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Cells, destination_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Cells, cells_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Cells, level_offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Metric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Metric, weights_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Metrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::Metrics, metrics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::EdgeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::EdgeData, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::EdgeData, turn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::EdgeData, is_forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::EdgeData, is_backward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::QueryGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::QueryGraph, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::QueryGraph, edges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::QueryGraph, node_level_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmld::QueryGraph, node_weights_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pbmld::LevelData)},
  { 9, -1, sizeof(::pbmld::Partitions)},
  { 16, -1, sizeof(::pbmld::CellData)},
  { 26, -1, sizeof(::pbmld::Cells)},
  { 35, -1, sizeof(::pbmld::Metric)},
  { 41, -1, sizeof(::pbmld::Metrics)},
  { 47, -1, sizeof(::pbmld::EdgeData)},
  { 56, -1, sizeof(::pbmld::QueryGraph)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmld::_LevelData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmld::_Partitions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmld::_CellData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmld::_Cells_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmld::_Metric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmld::_Metrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmld::_EdgeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmld::_QueryGraph_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mld.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tmld.proto\022\005pbmld\"e\n\tLevelData\022\024\n\014numbe"
      "r_level\030\001 \001(\r\022\026\n\016lidx_to_offset\030\002 \003(\r\022\024\n"
      "\014lidx_to_mask\030\003 \003(\004\022\024\n\014bit_to_level\030\004 \003("
      "\r\"E\n\nPartitions\022$\n\nlevel_data\030\001 \001(\0132\020.pb"
      "mld.LevelData\022\021\n\tpartition\030\002 \003(\004\"\242\001\n\010Cel"
      "lData\022\024\n\014value_offset\030\001 \001(\r\022\036\n\026source_bo"
      "undary_offset\030\002 \001(\r\022#\n\033destination_bound"
      "ary_offset\030\003 \001(\r\022\032\n\022source_node_number\030\004"
      " \001(\r\022\037\n\027destination_node_number\030\005 \001(\r\"t\n"
      "\005Cells\022\027\n\017source_boundary\030\001 \003(\r\022\034\n\024desti"
      "nation_boundary\030\002 \003(\r\022\036\n\005cells\030\003 \003(\0132\017.p"
      "bmld.CellData\022\024\n\014level_offset\030\004 \003(\004\"\031\n\006M"
      "etric\022\017\n\007weights\030\001 \003(\005\")\n\007Metrics\022\036\n\007met"
      "rics\030\001 \003(\0132\r.pbmld.Metric\"T\n\010EdgeData\022\016\n"
      "\006target\030\001 \001(\r\022\017\n\007turn_id\030\002 \001(\r\022\022\n\nis_for"
      "ward\030\003 \001(\010\022\023\n\013is_backward\030\004 \001(\010\"l\n\nQuery"
      "Graph\022\r\n\005nodes\030\001 \003(\r\022\036\n\005edges\030\002 \003(\0132\017.pb"
      "mld.EdgeData\022\031\n\021node_level_offset\030\003 \003(\r\022"
      "\024\n\014node_weights\030\004 \003(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 749);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mld.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mld_2eproto
namespace pbmld {

// ===================================================================

void LevelData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelData::kNumberLevelFieldNumber;
const int LevelData::kLidxToOffsetFieldNumber;
const int LevelData::kLidxToMaskFieldNumber;
const int LevelData::kBitToLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelData::LevelData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mld_2eproto::scc_info_LevelData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.LevelData)
}
LevelData::LevelData(const LevelData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lidx_to_offset_(from.lidx_to_offset_),
      lidx_to_mask_(from.lidx_to_mask_),
      bit_to_level_(from.bit_to_level_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  number_level_ = from.number_level_;
  // @@protoc_insertion_point(copy_constructor:pbmld.LevelData)
}

void LevelData::SharedCtor() {
  number_level_ = 0u;
}

LevelData::~LevelData() {
  // @@protoc_insertion_point(destructor:pbmld.LevelData)
  SharedDtor();
}

void LevelData::SharedDtor() {
}

void LevelData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelData::descriptor() {
  ::protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelData& LevelData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mld_2eproto::scc_info_LevelData.base);
  return *internal_default_instance();
}


void LevelData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lidx_to_offset_.Clear();
  lidx_to_mask_.Clear();
  bit_to_level_.Clear();
  number_level_ = 0u;
  _internal_metadata_.Clear();
}

bool LevelData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.LevelData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 number_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 lidx_to_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lidx_to_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_lidx_to_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 lidx_to_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_lidx_to_mask())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_lidx_to_mask())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 bit_to_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bit_to_level())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_bit_to_level())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.LevelData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.LevelData)
  return false;
#undef DO_
}

void LevelData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 number_level = 1;
  if (this->number_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->number_level(), output);
  }

  // repeated uint32 lidx_to_offset = 2;
  if (this->lidx_to_offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lidx_to_offset_cached_byte_size_));
  }
  for (int i = 0, n = this->lidx_to_offset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->lidx_to_offset(i), output);
  }

  // repeated uint64 lidx_to_mask = 3;
  if (this->lidx_to_mask_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lidx_to_mask_cached_byte_size_));
  }
  for (int i = 0, n = this->lidx_to_mask_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->lidx_to_mask(i), output);
  }

  // repeated uint32 bit_to_level = 4;
  if (this->bit_to_level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bit_to_level_cached_byte_size_));
  }
  for (int i = 0, n = this->bit_to_level_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->bit_to_level(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.LevelData)
}

::google::protobuf::uint8* LevelData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 number_level = 1;
  if (this->number_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->number_level(), target);
  }

  // repeated uint32 lidx_to_offset = 2;
  if (this->lidx_to_offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _lidx_to_offset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->lidx_to_offset_, target);
  }

  // repeated uint64 lidx_to_mask = 3;
  if (this->lidx_to_mask_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _lidx_to_mask_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->lidx_to_mask_, target);
  }

  // repeated uint32 bit_to_level = 4;
  if (this->bit_to_level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _bit_to_level_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->bit_to_level_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.LevelData)
  return target;
}

size_t LevelData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.LevelData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 lidx_to_offset = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->lidx_to_offset_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lidx_to_offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 lidx_to_mask = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->lidx_to_mask_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lidx_to_mask_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 bit_to_level = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->bit_to_level_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bit_to_level_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 number_level = 1;
  if (this->number_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.LevelData)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.LevelData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.LevelData)
    MergeFrom(*source);
  }
}

void LevelData::MergeFrom(const LevelData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.LevelData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lidx_to_offset_.MergeFrom(from.lidx_to_offset_);
  lidx_to_mask_.MergeFrom(from.lidx_to_mask_);
  bit_to_level_.MergeFrom(from.bit_to_level_);
  if (from.number_level() != 0) {
    set_number_level(from.number_level());
  }
}

void LevelData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.LevelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelData::CopyFrom(const LevelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.LevelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelData::IsInitialized() const {
  return true;
}

void LevelData::Swap(LevelData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelData::InternalSwap(LevelData* other) {
  using std::swap;
  lidx_to_offset_.InternalSwap(&other->lidx_to_offset_);
  lidx_to_mask_.InternalSwap(&other->lidx_to_mask_);
  bit_to_level_.InternalSwap(&other->bit_to_level_);
  swap(number_level_, other->number_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelData::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Partitions::InitAsDefaultInstance() {
  ::pbmld::_Partitions_default_instance_._instance.get_mutable()->level_data_ = const_cast< ::pbmld::LevelData*>(
      ::pbmld::LevelData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Partitions::kLevelDataFieldNumber;
const int Partitions::kPartitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Partitions::Partitions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mld_2eproto::scc_info_Partitions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.Partitions)
}
Partitions::Partitions(const Partitions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      partition_(from.partition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_level_data()) {
    level_data_ = new ::pbmld::LevelData(*from.level_data_);
  } else {
    level_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pbmld.Partitions)
}

void Partitions::SharedCtor() {
  level_data_ = NULL;
}

Partitions::~Partitions() {
  // @@protoc_insertion_point(destructor:pbmld.Partitions)
  SharedDtor();
}

void Partitions::SharedDtor() {
  if (this != internal_default_instance()) delete level_data_;
}

void Partitions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Partitions::descriptor() {
  ::protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Partitions& Partitions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mld_2eproto::scc_info_Partitions.base);
  return *internal_default_instance();
}


void Partitions::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partition_.Clear();
  if (GetArenaNoVirtual() == NULL && level_data_ != NULL) {
    delete level_data_;
  }
  level_data_ = NULL;
  _internal_metadata_.Clear();
}

bool Partitions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.Partitions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pbmld.LevelData level_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_level_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 partition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_partition())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_partition())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.Partitions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.Partitions)
  return false;
#undef DO_
}

void Partitions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbmld.LevelData level_data = 1;
  if (this->has_level_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_level_data(), output);
  }

  // repeated uint64 partition = 2;
  if (this->partition_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _partition_cached_byte_size_));
  }
  for (int i = 0, n = this->partition_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->partition(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.Partitions)
}

::google::protobuf::uint8* Partitions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbmld.LevelData level_data = 1;
  if (this->has_level_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_level_data(), deterministic, target);
  }

  // repeated uint64 partition = 2;
  if (this->partition_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _partition_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->partition_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.Partitions)
  return target;
}

size_t Partitions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.Partitions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 partition = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->partition_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _partition_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .pbmld.LevelData level_data = 1;
  if (this->has_level_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *level_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Partitions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.Partitions)
  GOOGLE_DCHECK_NE(&from, this);
  const Partitions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Partitions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.Partitions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.Partitions)
    MergeFrom(*source);
  }
}

void Partitions::MergeFrom(const Partitions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.Partitions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partition_.MergeFrom(from.partition_);
  if (from.has_level_data()) {
    mutable_level_data()->::pbmld::LevelData::MergeFrom(from.level_data());
  }
}

void Partitions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.Partitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Partitions::CopyFrom(const Partitions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.Partitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Partitions::IsInitialized() const {
  return true;
}

void Partitions::Swap(Partitions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Partitions::InternalSwap(Partitions* other) {
  using std::swap;
  partition_.InternalSwap(&other->partition_);
  swap(level_data_, other->level_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Partitions::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CellData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CellData::kValueOffsetFieldNumber;
const int CellData::kSourceBoundaryOffsetFieldNumber;
const int CellData::kDestinationBoundaryOffsetFieldNumber;
const int CellData::kSourceNodeNumberFieldNumber;
const int CellData::kDestinationNodeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CellData::CellData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mld_2eproto::scc_info_CellData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.CellData)
}
CellData::CellData(const CellData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_offset_, &from.value_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&destination_node_number_) -
    reinterpret_cast<char*>(&value_offset_)) + sizeof(destination_node_number_));
  // @@protoc_insertion_point(copy_constructor:pbmld.CellData)
}

void CellData::SharedCtor() {
  ::memset(&value_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_node_number_) -
      reinterpret_cast<char*>(&value_offset_)) + sizeof(destination_node_number_));
}

CellData::~CellData() {
  // @@protoc_insertion_point(destructor:pbmld.CellData)
  SharedDtor();
}

void CellData::SharedDtor() {
}

void CellData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CellData::descriptor() {
  ::protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CellData& CellData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mld_2eproto::scc_info_CellData.base);
  return *internal_default_instance();
}


void CellData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.CellData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_node_number_) -
      reinterpret_cast<char*>(&value_offset_)) + sizeof(destination_node_number_));
  _internal_metadata_.Clear();
}

bool CellData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.CellData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value_offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source_boundary_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_boundary_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 destination_boundary_offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destination_boundary_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source_node_number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_node_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 destination_node_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destination_node_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.CellData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.CellData)
  return false;
#undef DO_
}

void CellData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.CellData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value_offset = 1;
  if (this->value_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value_offset(), output);
  }

  // uint32 source_boundary_offset = 2;
  if (this->source_boundary_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source_boundary_offset(), output);
  }

  // uint32 destination_boundary_offset = 3;
  if (this->destination_boundary_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->destination_boundary_offset(), output);
  }

  // uint32 source_node_number = 4;
  if (this->source_node_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->source_node_number(), output);
  }

  // uint32 destination_node_number = 5;
  if (this->destination_node_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->destination_node_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.CellData)
}

::google::protobuf::uint8* CellData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.CellData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value_offset = 1;
  if (this->value_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value_offset(), target);
  }

  // uint32 source_boundary_offset = 2;
  if (this->source_boundary_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source_boundary_offset(), target);
  }

  // uint32 destination_boundary_offset = 3;
  if (this->destination_boundary_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->destination_boundary_offset(), target);
  }

  // uint32 source_node_number = 4;
  if (this->source_node_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->source_node_number(), target);
  }

  // uint32 destination_node_number = 5;
  if (this->destination_node_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->destination_node_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.CellData)
  return target;
}

size_t CellData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.CellData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 value_offset = 1;
  if (this->value_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value_offset());
  }

  // uint32 source_boundary_offset = 2;
  if (this->source_boundary_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_boundary_offset());
  }

  // uint32 destination_boundary_offset = 3;
  if (this->destination_boundary_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destination_boundary_offset());
  }

  // uint32 source_node_number = 4;
  if (this->source_node_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_node_number());
  }

  // uint32 destination_node_number = 5;
  if (this->destination_node_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destination_node_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CellData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.CellData)
  GOOGLE_DCHECK_NE(&from, this);
  const CellData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CellData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.CellData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.CellData)
    MergeFrom(*source);
  }
}

void CellData::MergeFrom(const CellData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.CellData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value_offset() != 0) {
    set_value_offset(from.value_offset());
  }
  if (from.source_boundary_offset() != 0) {
    set_source_boundary_offset(from.source_boundary_offset());
  }
  if (from.destination_boundary_offset() != 0) {
    set_destination_boundary_offset(from.destination_boundary_offset());
  }
  if (from.source_node_number() != 0) {
    set_source_node_number(from.source_node_number());
  }
  if (from.destination_node_number() != 0) {
    set_destination_node_number(from.destination_node_number());
  }
}

void CellData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.CellData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CellData::CopyFrom(const CellData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.CellData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CellData::IsInitialized() const {
  return true;
}

void CellData::Swap(CellData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CellData::InternalSwap(CellData* other) {
  using std::swap;
  swap(value_offset_, other->value_offset_);
  swap(source_boundary_offset_, other->source_boundary_offset_);
  swap(destination_boundary_offset_, other->destination_boundary_offset_);
  swap(source_node_number_, other->source_node_number_);
  swap(destination_node_number_, other->destination_node_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CellData::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Cells::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cells::kSourceBoundaryFieldNumber;
const int Cells::kDestinationBoundaryFieldNumber;
const int Cells::kCellsFieldNumber;
const int Cells::kLevelOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cells::Cells()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mld_2eproto::scc_info_Cells.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.Cells)
}
Cells::Cells(const Cells& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      source_boundary_(from.source_boundary_),
      destination_boundary_(from.destination_boundary_),
      cells_(from.cells_),
      level_offset_(from.level_offset_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmld.Cells)
}

void Cells::SharedCtor() {
}

Cells::~Cells() {
  // @@protoc_insertion_point(destructor:pbmld.Cells)
  SharedDtor();
}

void Cells::SharedDtor() {
}

void Cells::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Cells::descriptor() {
  ::protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cells& Cells::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mld_2eproto::scc_info_Cells.base);
  return *internal_default_instance();
}


void Cells::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.Cells)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_boundary_.Clear();
  destination_boundary_.Clear();
  cells_.Clear();
  level_offset_.Clear();
  _internal_metadata_.Clear();
}

bool Cells::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.Cells)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 source_boundary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_source_boundary())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_source_boundary())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 destination_boundary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_destination_boundary())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_destination_boundary())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pbmld.CellData cells = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cells()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 level_offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_level_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_level_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.Cells)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.Cells)
  return false;
#undef DO_
}

void Cells::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.Cells)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 source_boundary = 1;
  if (this->source_boundary_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _source_boundary_cached_byte_size_));
  }
  for (int i = 0, n = this->source_boundary_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->source_boundary(i), output);
  }

  // repeated uint32 destination_boundary = 2;
  if (this->destination_boundary_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _destination_boundary_cached_byte_size_));
  }
  for (int i = 0, n = this->destination_boundary_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->destination_boundary(i), output);
  }

  // repeated .pbmld.CellData cells = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->cells(static_cast<int>(i)),
      output);
  }

  // repeated uint64 level_offset = 4;
  if (this->level_offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _level_offset_cached_byte_size_));
  }
  for (int i = 0, n = this->level_offset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->level_offset(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.Cells)
}

::google::protobuf::uint8* Cells::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.Cells)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 source_boundary = 1;
  if (this->source_boundary_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _source_boundary_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->source_boundary_, target);
  }

  // repeated uint32 destination_boundary = 2;
  if (this->destination_boundary_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _destination_boundary_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->destination_boundary_, target);
  }

  // repeated .pbmld.CellData cells = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->cells(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint64 level_offset = 4;
  if (this->level_offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _level_offset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->level_offset_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.Cells)
  return target;
}

size_t Cells::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.Cells)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 source_boundary = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->source_boundary_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _source_boundary_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 destination_boundary = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->destination_boundary_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _destination_boundary_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .pbmld.CellData cells = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->cells_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cells(static_cast<int>(i)));
    }
  }

  // repeated uint64 level_offset = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->level_offset_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _level_offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cells::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.Cells)
  GOOGLE_DCHECK_NE(&from, this);
  const Cells* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cells>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.Cells)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.Cells)
    MergeFrom(*source);
  }
}

void Cells::MergeFrom(const Cells& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.Cells)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  source_boundary_.MergeFrom(from.source_boundary_);
  destination_boundary_.MergeFrom(from.destination_boundary_);
  cells_.MergeFrom(from.cells_);
  level_offset_.MergeFrom(from.level_offset_);
}

void Cells::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.Cells)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cells::CopyFrom(const Cells& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.Cells)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cells::IsInitialized() const {
  return true;
}

void Cells::Swap(Cells* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cells::InternalSwap(Cells* other) {
  using std::swap;
  source_boundary_.InternalSwap(&other->source_boundary_);
  destination_boundary_.InternalSwap(&other->destination_boundary_);
  CastToBase(&cells_)->InternalSwap(CastToBase(&other->cells_));
  level_offset_.InternalSwap(&other->level_offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Cells::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Metric::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metric::kWeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metric::Metric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mld_2eproto::scc_info_Metric.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.Metric)
}
Metric::Metric(const Metric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      weights_(from.weights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmld.Metric)
}

void Metric::SharedCtor() {
}

Metric::~Metric() {
  // @@protoc_insertion_point(destructor:pbmld.Metric)
  SharedDtor();
}

void Metric::SharedDtor() {
}

void Metric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metric::descriptor() {
  ::protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metric& Metric::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mld_2eproto::scc_info_Metric.base);
  return *internal_default_instance();
}


void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weights_.Clear();
  _internal_metadata_.Clear();
}

bool Metric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.Metric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 weights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_weights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_weights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.Metric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.Metric)
  return false;
#undef DO_
}

void Metric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 weights = 1;
  if (this->weights_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _weights_cached_byte_size_));
  }
  for (int i = 0, n = this->weights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->weights(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.Metric)
}

::google::protobuf::uint8* Metric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 weights = 1;
  if (this->weights_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _weights_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->weights_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.Metric)
  return target;
}

size_t Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.Metric)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 weights = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->weights_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _weights_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  const Metric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.Metric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.Metric)
    MergeFrom(*source);
  }
}

void Metric::MergeFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weights_.MergeFrom(from.weights_);
}

void Metric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metric::IsInitialized() const {
  return true;
}

void Metric::Swap(Metric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metric::InternalSwap(Metric* other) {
  using std::swap;
  weights_.InternalSwap(&other->weights_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Metrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metrics::kMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metrics::Metrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mld_2eproto::scc_info_Metrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.Metrics)
}
Metrics::Metrics(const Metrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metrics_(from.metrics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmld.Metrics)
}

void Metrics::SharedCtor() {
}

Metrics::~Metrics() {
  // @@protoc_insertion_point(destructor:pbmld.Metrics)
  SharedDtor();
}

void Metrics::SharedDtor() {
}

void Metrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metrics::descriptor() {
  ::protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metrics& Metrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mld_2eproto::scc_info_Metrics.base);
  return *internal_default_instance();
}


void Metrics::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  _internal_metadata_.Clear();
}

bool Metrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.Metrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pbmld.Metric metrics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.Metrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.Metrics)
  return false;
#undef DO_
}

void Metrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbmld.Metric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->metrics(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.Metrics)
}

::google::protobuf::uint8* Metrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbmld.Metric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->metrics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.Metrics)
  return target;
}

size_t Metrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.Metrics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pbmld.Metric metrics = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metrics(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  const Metrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.Metrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.Metrics)
    MergeFrom(*source);
  }
}

void Metrics::MergeFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
}

void Metrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metrics::CopyFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metrics::IsInitialized() const {
  return true;
}

void Metrics::Swap(Metrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metrics::InternalSwap(Metrics* other) {
  using std::swap;
  CastToBase(&metrics_)->InternalSwap(CastToBase(&other->metrics_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metrics::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EdgeData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeData::kTargetFieldNumber;
const int EdgeData::kTurnIdFieldNumber;
const int EdgeData::kIsForwardFieldNumber;
const int EdgeData::kIsBackwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeData::EdgeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mld_2eproto::scc_info_EdgeData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.EdgeData)
}
EdgeData::EdgeData(const EdgeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_backward_) -
    reinterpret_cast<char*>(&target_)) + sizeof(is_backward_));
  // @@protoc_insertion_point(copy_constructor:pbmld.EdgeData)
}

void EdgeData::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_backward_) -
      reinterpret_cast<char*>(&target_)) + sizeof(is_backward_));
}

EdgeData::~EdgeData() {
  // @@protoc_insertion_point(destructor:pbmld.EdgeData)
  SharedDtor();
}

void EdgeData::SharedDtor() {
}

void EdgeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EdgeData::descriptor() {
  ::protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeData& EdgeData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mld_2eproto::scc_info_EdgeData.base);
  return *internal_default_instance();
}


void EdgeData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.EdgeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_backward_) -
      reinterpret_cast<char*>(&target_)) + sizeof(is_backward_));
  _internal_metadata_.Clear();
}

bool EdgeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.EdgeData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 turn_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_forward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_forward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_backward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_backward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.EdgeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.EdgeData)
  return false;
#undef DO_
}

void EdgeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.EdgeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // uint32 turn_id = 2;
  if (this->turn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->turn_id(), output);
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_forward(), output);
  }

  // bool is_backward = 4;
  if (this->is_backward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_backward(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.EdgeData)
}

::google::protobuf::uint8* EdgeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.EdgeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // uint32 turn_id = 2;
  if (this->turn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->turn_id(), target);
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_forward(), target);
  }

  // bool is_backward = 4;
  if (this->is_backward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_backward(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.EdgeData)
  return target;
}

size_t EdgeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.EdgeData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // uint32 turn_id = 2;
  if (this->turn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turn_id());
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    total_size += 1 + 1;
  }

  // bool is_backward = 4;
  if (this->is_backward() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.EdgeData)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.EdgeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.EdgeData)
    MergeFrom(*source);
  }
}

void EdgeData::MergeFrom(const EdgeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.EdgeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.turn_id() != 0) {
    set_turn_id(from.turn_id());
  }
  if (from.is_forward() != 0) {
    set_is_forward(from.is_forward());
  }
  if (from.is_backward() != 0) {
    set_is_backward(from.is_backward());
  }
}

void EdgeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.EdgeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeData::CopyFrom(const EdgeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.EdgeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeData::IsInitialized() const {
  return true;
}

void EdgeData::Swap(EdgeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeData::InternalSwap(EdgeData* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(turn_id_, other->turn_id_);
  swap(is_forward_, other->is_forward_);
  swap(is_backward_, other->is_backward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EdgeData::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryGraph::kNodesFieldNumber;
const int QueryGraph::kEdgesFieldNumber;
const int QueryGraph::kNodeLevelOffsetFieldNumber;
const int QueryGraph::kNodeWeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryGraph::QueryGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mld_2eproto::scc_info_QueryGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.QueryGraph)
}
QueryGraph::QueryGraph(const QueryGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      edges_(from.edges_),
      node_level_offset_(from.node_level_offset_),
      node_weights_(from.node_weights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmld.QueryGraph)
}

void QueryGraph::SharedCtor() {
}

QueryGraph::~QueryGraph() {
  // @@protoc_insertion_point(destructor:pbmld.QueryGraph)
  SharedDtor();
}

void QueryGraph::SharedDtor() {
}

void QueryGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryGraph::descriptor() {
  ::protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryGraph& QueryGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mld_2eproto::scc_info_QueryGraph.base);
  return *internal_default_instance();
}


void QueryGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.QueryGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  edges_.Clear();
  node_level_offset_.Clear();
  node_weights_.Clear();
  _internal_metadata_.Clear();
}

bool QueryGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.QueryGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_nodes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_nodes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pbmld.EdgeData edges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 node_level_offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_node_level_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_node_level_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 node_weights = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_node_weights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_node_weights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.QueryGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.QueryGraph)
  return false;
#undef DO_
}

void QueryGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.QueryGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 nodes = 1;
  if (this->nodes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nodes_cached_byte_size_));
  }
  for (int i = 0, n = this->nodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->nodes(i), output);
  }

  // repeated .pbmld.EdgeData edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->edges(static_cast<int>(i)),
      output);
  }

  // repeated uint32 node_level_offset = 3;
  if (this->node_level_offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _node_level_offset_cached_byte_size_));
  }
  for (int i = 0, n = this->node_level_offset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->node_level_offset(i), output);
  }

  // repeated int32 node_weights = 4;
  if (this->node_weights_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _node_weights_cached_byte_size_));
  }
  for (int i = 0, n = this->node_weights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->node_weights(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.QueryGraph)
}

::google::protobuf::uint8* QueryGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.QueryGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 nodes = 1;
  if (this->nodes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nodes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->nodes_, target);
  }

  // repeated .pbmld.EdgeData edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->edges(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 node_level_offset = 3;
  if (this->node_level_offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _node_level_offset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->node_level_offset_, target);
  }

  // repeated int32 node_weights = 4;
  if (this->node_weights_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _node_weights_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->node_weights_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.QueryGraph)
  return target;
}

size_t QueryGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.QueryGraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 nodes = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->nodes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nodes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .pbmld.EdgeData edges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->edges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->edges(static_cast<int>(i)));
    }
  }

  // repeated uint32 node_level_offset = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->node_level_offset_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _node_level_offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 node_weights = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->node_weights_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _node_weights_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.QueryGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.QueryGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.QueryGraph)
    MergeFrom(*source);
  }
}

void QueryGraph::MergeFrom(const QueryGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.QueryGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  edges_.MergeFrom(from.edges_);
  node_level_offset_.MergeFrom(from.node_level_offset_);
  node_weights_.MergeFrom(from.node_weights_);
}

void QueryGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.QueryGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryGraph::CopyFrom(const QueryGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.QueryGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGraph::IsInitialized() const {
  return true;
}

void QueryGraph::Swap(QueryGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryGraph::InternalSwap(QueryGraph* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  CastToBase(&edges_)->InternalSwap(CastToBase(&other->edges_));
  node_level_offset_.InternalSwap(&other->node_level_offset_);
  node_weights_.InternalSwap(&other->node_weights_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryGraph::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pbmld
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbmld::LevelData* Arena::CreateMaybeMessage< ::pbmld::LevelData >(Arena* arena) {
  return Arena::CreateInternal< ::pbmld::LevelData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbmld::Partitions* Arena::CreateMaybeMessage< ::pbmld::Partitions >(Arena* arena) {
  return Arena::CreateInternal< ::pbmld::Partitions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbmld::CellData* Arena::CreateMaybeMessage< ::pbmld::CellData >(Arena* arena) {
  return Arena::CreateInternal< ::pbmld::CellData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbmld::Cells* Arena::CreateMaybeMessage< ::pbmld::Cells >(Arena* arena) {
  return Arena::CreateInternal< ::pbmld::Cells >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbmld::Metric* Arena::CreateMaybeMessage< ::pbmld::Metric >(Arena* arena) {
  return Arena::CreateInternal< ::pbmld::Metric >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbmld::Metrics* Arena::CreateMaybeMessage< ::pbmld::Metrics >(Arena* arena) {
  return Arena::CreateInternal< ::pbmld::Metrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbmld::EdgeData* Arena::CreateMaybeMessage< ::pbmld::EdgeData >(Arena* arena) {
  return Arena::CreateInternal< ::pbmld::EdgeData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbmld::QueryGraph* Arena::CreateMaybeMessage< ::pbmld::QueryGraph >(Arena* arena) {
  return Arena::CreateInternal< ::pbmld::QueryGraph >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
