// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edge-based-graph.proto

#include "edge-based-graph.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_edge_2dbased_2dgraph_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_edge_2dbased_2dgraph_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EdgeBasedNode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_edge_2dbased_2dgraph_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodeBasedAnnotation;
}  // namespace protobuf_edge_2dbased_2dgraph_2eproto
namespace pbebg {
class EdgeBasedNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EdgeBasedNode>
      _instance;
} _EdgeBasedNode_default_instance_;
class NodeBasedAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeBasedAnnotation>
      _instance;
} _NodeBasedAnnotation_default_instance_;
class EdgeBasedNodeContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EdgeBasedNodeContainer>
      _instance;
} _EdgeBasedNodeContainer_default_instance_;
class TurnInstructionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TurnInstructions>
      _instance;
} _TurnInstructions_default_instance_;
class TurnPenaltiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TurnPenalties>
      _instance;
} _TurnPenalties_default_instance_;
}  // namespace pbebg
namespace protobuf_edge_2dbased_2dgraph_2eproto {
static void InitDefaultsEdgeBasedNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbebg::_EdgeBasedNode_default_instance_;
    new (ptr) ::pbebg::EdgeBasedNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbebg::EdgeBasedNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EdgeBasedNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEdgeBasedNode}, {}};

static void InitDefaultsNodeBasedAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbebg::_NodeBasedAnnotation_default_instance_;
    new (ptr) ::pbebg::NodeBasedAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbebg::NodeBasedAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeBasedAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeBasedAnnotation}, {}};

static void InitDefaultsEdgeBasedNodeContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbebg::_EdgeBasedNodeContainer_default_instance_;
    new (ptr) ::pbebg::EdgeBasedNodeContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbebg::EdgeBasedNodeContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EdgeBasedNodeContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEdgeBasedNodeContainer}, {
      &protobuf_edge_2dbased_2dgraph_2eproto::scc_info_EdgeBasedNode.base,
      &protobuf_edge_2dbased_2dgraph_2eproto::scc_info_NodeBasedAnnotation.base,}};

static void InitDefaultsTurnInstructions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbebg::_TurnInstructions_default_instance_;
    new (ptr) ::pbebg::TurnInstructions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbebg::TurnInstructions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TurnInstructions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTurnInstructions}, {}};

static void InitDefaultsTurnPenalties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbebg::_TurnPenalties_default_instance_;
    new (ptr) ::pbebg::TurnPenalties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbebg::TurnPenalties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TurnPenalties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTurnPenalties}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EdgeBasedNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeBasedAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EdgeBasedNodeContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TurnInstructions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TurnPenalties.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNode, geometry_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNode, component_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNode, annotation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNode, is_tiny_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNode, segregated_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::NodeBasedAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::NodeBasedAnnotation, name_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNodeContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNodeContainer, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::EdgeBasedNodeContainer, annotation_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::TurnInstructions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::TurnInstructions, turn_instruction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::TurnPenalties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbebg::TurnPenalties, turn_penalties_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pbebg::EdgeBasedNode)},
  { 10, -1, sizeof(::pbebg::NodeBasedAnnotation)},
  { 16, -1, sizeof(::pbebg::EdgeBasedNodeContainer)},
  { 23, -1, sizeof(::pbebg::TurnInstructions)},
  { 29, -1, sizeof(::pbebg::TurnPenalties)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbebg::_EdgeBasedNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbebg::_NodeBasedAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbebg::_EdgeBasedNodeContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbebg::_TurnInstructions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbebg::_TurnPenalties_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "edge-based-graph.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026edge-based-graph.proto\022\005pbebg\"v\n\rEdgeB"
      "asedNode\022\023\n\013geometry_id\030\001 \001(\r\022\024\n\014compone"
      "nt_id\030\002 \001(\r\022\025\n\rannotation_id\030\003 \001(\r\022\017\n\007is"
      "_tiny\030\004 \001(\010\022\022\n\nsegregated\030\005 \001(\010\"&\n\023NodeB"
      "asedAnnotation\022\017\n\007name_id\030\001 \001(\r\"r\n\026EdgeB"
      "asedNodeContainer\022#\n\005nodes\030\001 \003(\0132\024.pbebg"
      ".EdgeBasedNode\0223\n\017annotation_data\030\002 \003(\0132"
      "\032.pbebg.NodeBasedAnnotation\",\n\020TurnInstr"
      "uctions\022\030\n\020turn_instruction\030\001 \003(\r\"\'\n\rTur"
      "nPenalties\022\026\n\016turn_penalties\030\001 \003(\rb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 402);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "edge-based-graph.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_edge_2dbased_2dgraph_2eproto
namespace pbebg {

// ===================================================================

void EdgeBasedNode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeBasedNode::kGeometryIdFieldNumber;
const int EdgeBasedNode::kComponentIdFieldNumber;
const int EdgeBasedNode::kAnnotationIdFieldNumber;
const int EdgeBasedNode::kIsTinyFieldNumber;
const int EdgeBasedNode::kSegregatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeBasedNode::EdgeBasedNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_edge_2dbased_2dgraph_2eproto::scc_info_EdgeBasedNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.EdgeBasedNode)
}
EdgeBasedNode::EdgeBasedNode(const EdgeBasedNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&geometry_id_, &from.geometry_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&segregated_) -
    reinterpret_cast<char*>(&geometry_id_)) + sizeof(segregated_));
  // @@protoc_insertion_point(copy_constructor:pbebg.EdgeBasedNode)
}

void EdgeBasedNode::SharedCtor() {
  ::memset(&geometry_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segregated_) -
      reinterpret_cast<char*>(&geometry_id_)) + sizeof(segregated_));
}

EdgeBasedNode::~EdgeBasedNode() {
  // @@protoc_insertion_point(destructor:pbebg.EdgeBasedNode)
  SharedDtor();
}

void EdgeBasedNode::SharedDtor() {
}

void EdgeBasedNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EdgeBasedNode::descriptor() {
  ::protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeBasedNode& EdgeBasedNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_edge_2dbased_2dgraph_2eproto::scc_info_EdgeBasedNode.base);
  return *internal_default_instance();
}


void EdgeBasedNode::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.EdgeBasedNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&geometry_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segregated_) -
      reinterpret_cast<char*>(&geometry_id_)) + sizeof(segregated_));
  _internal_metadata_.Clear();
}

bool EdgeBasedNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.EdgeBasedNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 geometry_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &geometry_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 component_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &component_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 annotation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annotation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_tiny = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_tiny_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool segregated = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &segregated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.EdgeBasedNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.EdgeBasedNode)
  return false;
#undef DO_
}

void EdgeBasedNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.EdgeBasedNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 geometry_id = 1;
  if (this->geometry_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->geometry_id(), output);
  }

  // uint32 component_id = 2;
  if (this->component_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->component_id(), output);
  }

  // uint32 annotation_id = 3;
  if (this->annotation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->annotation_id(), output);
  }

  // bool is_tiny = 4;
  if (this->is_tiny() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_tiny(), output);
  }

  // bool segregated = 5;
  if (this->segregated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->segregated(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.EdgeBasedNode)
}

::google::protobuf::uint8* EdgeBasedNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.EdgeBasedNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 geometry_id = 1;
  if (this->geometry_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->geometry_id(), target);
  }

  // uint32 component_id = 2;
  if (this->component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->component_id(), target);
  }

  // uint32 annotation_id = 3;
  if (this->annotation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->annotation_id(), target);
  }

  // bool is_tiny = 4;
  if (this->is_tiny() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_tiny(), target);
  }

  // bool segregated = 5;
  if (this->segregated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->segregated(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.EdgeBasedNode)
  return target;
}

size_t EdgeBasedNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.EdgeBasedNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 geometry_id = 1;
  if (this->geometry_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->geometry_id());
  }

  // uint32 component_id = 2;
  if (this->component_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->component_id());
  }

  // uint32 annotation_id = 3;
  if (this->annotation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annotation_id());
  }

  // bool is_tiny = 4;
  if (this->is_tiny() != 0) {
    total_size += 1 + 1;
  }

  // bool segregated = 5;
  if (this->segregated() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeBasedNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.EdgeBasedNode)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeBasedNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeBasedNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.EdgeBasedNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.EdgeBasedNode)
    MergeFrom(*source);
  }
}

void EdgeBasedNode::MergeFrom(const EdgeBasedNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.EdgeBasedNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.geometry_id() != 0) {
    set_geometry_id(from.geometry_id());
  }
  if (from.component_id() != 0) {
    set_component_id(from.component_id());
  }
  if (from.annotation_id() != 0) {
    set_annotation_id(from.annotation_id());
  }
  if (from.is_tiny() != 0) {
    set_is_tiny(from.is_tiny());
  }
  if (from.segregated() != 0) {
    set_segregated(from.segregated());
  }
}

void EdgeBasedNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.EdgeBasedNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeBasedNode::CopyFrom(const EdgeBasedNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.EdgeBasedNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeBasedNode::IsInitialized() const {
  return true;
}

void EdgeBasedNode::Swap(EdgeBasedNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeBasedNode::InternalSwap(EdgeBasedNode* other) {
  using std::swap;
  swap(geometry_id_, other->geometry_id_);
  swap(component_id_, other->component_id_);
  swap(annotation_id_, other->annotation_id_);
  swap(is_tiny_, other->is_tiny_);
  swap(segregated_, other->segregated_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EdgeBasedNode::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeBasedAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeBasedAnnotation::kNameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeBasedAnnotation::NodeBasedAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_edge_2dbased_2dgraph_2eproto::scc_info_NodeBasedAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.NodeBasedAnnotation)
}
NodeBasedAnnotation::NodeBasedAnnotation(const NodeBasedAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_id_ = from.name_id_;
  // @@protoc_insertion_point(copy_constructor:pbebg.NodeBasedAnnotation)
}

void NodeBasedAnnotation::SharedCtor() {
  name_id_ = 0u;
}

NodeBasedAnnotation::~NodeBasedAnnotation() {
  // @@protoc_insertion_point(destructor:pbebg.NodeBasedAnnotation)
  SharedDtor();
}

void NodeBasedAnnotation::SharedDtor() {
}

void NodeBasedAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NodeBasedAnnotation::descriptor() {
  ::protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeBasedAnnotation& NodeBasedAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_edge_2dbased_2dgraph_2eproto::scc_info_NodeBasedAnnotation.base);
  return *internal_default_instance();
}


void NodeBasedAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.NodeBasedAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_id_ = 0u;
  _internal_metadata_.Clear();
}

bool NodeBasedAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.NodeBasedAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 name_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.NodeBasedAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.NodeBasedAnnotation)
  return false;
#undef DO_
}

void NodeBasedAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.NodeBasedAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_id = 1;
  if (this->name_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->name_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.NodeBasedAnnotation)
}

::google::protobuf::uint8* NodeBasedAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.NodeBasedAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_id = 1;
  if (this->name_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->name_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.NodeBasedAnnotation)
  return target;
}

size_t NodeBasedAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.NodeBasedAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 name_id = 1;
  if (this->name_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->name_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeBasedAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.NodeBasedAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeBasedAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeBasedAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.NodeBasedAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.NodeBasedAnnotation)
    MergeFrom(*source);
  }
}

void NodeBasedAnnotation::MergeFrom(const NodeBasedAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.NodeBasedAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name_id() != 0) {
    set_name_id(from.name_id());
  }
}

void NodeBasedAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.NodeBasedAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeBasedAnnotation::CopyFrom(const NodeBasedAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.NodeBasedAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeBasedAnnotation::IsInitialized() const {
  return true;
}

void NodeBasedAnnotation::Swap(NodeBasedAnnotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeBasedAnnotation::InternalSwap(NodeBasedAnnotation* other) {
  using std::swap;
  swap(name_id_, other->name_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NodeBasedAnnotation::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EdgeBasedNodeContainer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeBasedNodeContainer::kNodesFieldNumber;
const int EdgeBasedNodeContainer::kAnnotationDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeBasedNodeContainer::EdgeBasedNodeContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_edge_2dbased_2dgraph_2eproto::scc_info_EdgeBasedNodeContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.EdgeBasedNodeContainer)
}
EdgeBasedNodeContainer::EdgeBasedNodeContainer(const EdgeBasedNodeContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      annotation_data_(from.annotation_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbebg.EdgeBasedNodeContainer)
}

void EdgeBasedNodeContainer::SharedCtor() {
}

EdgeBasedNodeContainer::~EdgeBasedNodeContainer() {
  // @@protoc_insertion_point(destructor:pbebg.EdgeBasedNodeContainer)
  SharedDtor();
}

void EdgeBasedNodeContainer::SharedDtor() {
}

void EdgeBasedNodeContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EdgeBasedNodeContainer::descriptor() {
  ::protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeBasedNodeContainer& EdgeBasedNodeContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_edge_2dbased_2dgraph_2eproto::scc_info_EdgeBasedNodeContainer.base);
  return *internal_default_instance();
}


void EdgeBasedNodeContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.EdgeBasedNodeContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  annotation_data_.Clear();
  _internal_metadata_.Clear();
}

bool EdgeBasedNodeContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.EdgeBasedNodeContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pbebg.EdgeBasedNode nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_annotation_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.EdgeBasedNodeContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.EdgeBasedNodeContainer)
  return false;
#undef DO_
}

void EdgeBasedNodeContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.EdgeBasedNodeContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbebg.EdgeBasedNode nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  // repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotation_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->annotation_data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.EdgeBasedNodeContainer)
}

::google::protobuf::uint8* EdgeBasedNodeContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.EdgeBasedNodeContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbebg.EdgeBasedNode nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotation_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->annotation_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.EdgeBasedNodeContainer)
  return target;
}

size_t EdgeBasedNodeContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.EdgeBasedNodeContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pbebg.EdgeBasedNode nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->annotation_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->annotation_data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeBasedNodeContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.EdgeBasedNodeContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeBasedNodeContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeBasedNodeContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.EdgeBasedNodeContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.EdgeBasedNodeContainer)
    MergeFrom(*source);
  }
}

void EdgeBasedNodeContainer::MergeFrom(const EdgeBasedNodeContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.EdgeBasedNodeContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  annotation_data_.MergeFrom(from.annotation_data_);
}

void EdgeBasedNodeContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.EdgeBasedNodeContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeBasedNodeContainer::CopyFrom(const EdgeBasedNodeContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.EdgeBasedNodeContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeBasedNodeContainer::IsInitialized() const {
  return true;
}

void EdgeBasedNodeContainer::Swap(EdgeBasedNodeContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeBasedNodeContainer::InternalSwap(EdgeBasedNodeContainer* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  CastToBase(&annotation_data_)->InternalSwap(CastToBase(&other->annotation_data_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EdgeBasedNodeContainer::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TurnInstructions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TurnInstructions::kTurnInstructionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TurnInstructions::TurnInstructions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_edge_2dbased_2dgraph_2eproto::scc_info_TurnInstructions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.TurnInstructions)
}
TurnInstructions::TurnInstructions(const TurnInstructions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      turn_instruction_(from.turn_instruction_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbebg.TurnInstructions)
}

void TurnInstructions::SharedCtor() {
}

TurnInstructions::~TurnInstructions() {
  // @@protoc_insertion_point(destructor:pbebg.TurnInstructions)
  SharedDtor();
}

void TurnInstructions::SharedDtor() {
}

void TurnInstructions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TurnInstructions::descriptor() {
  ::protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TurnInstructions& TurnInstructions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_edge_2dbased_2dgraph_2eproto::scc_info_TurnInstructions.base);
  return *internal_default_instance();
}


void TurnInstructions::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.TurnInstructions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  turn_instruction_.Clear();
  _internal_metadata_.Clear();
}

bool TurnInstructions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.TurnInstructions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 turn_instruction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_turn_instruction())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_turn_instruction())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.TurnInstructions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.TurnInstructions)
  return false;
#undef DO_
}

void TurnInstructions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.TurnInstructions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 turn_instruction = 1;
  if (this->turn_instruction_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _turn_instruction_cached_byte_size_));
  }
  for (int i = 0, n = this->turn_instruction_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->turn_instruction(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.TurnInstructions)
}

::google::protobuf::uint8* TurnInstructions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.TurnInstructions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 turn_instruction = 1;
  if (this->turn_instruction_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _turn_instruction_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->turn_instruction_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.TurnInstructions)
  return target;
}

size_t TurnInstructions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.TurnInstructions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 turn_instruction = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->turn_instruction_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _turn_instruction_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TurnInstructions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.TurnInstructions)
  GOOGLE_DCHECK_NE(&from, this);
  const TurnInstructions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TurnInstructions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.TurnInstructions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.TurnInstructions)
    MergeFrom(*source);
  }
}

void TurnInstructions::MergeFrom(const TurnInstructions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.TurnInstructions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  turn_instruction_.MergeFrom(from.turn_instruction_);
}

void TurnInstructions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.TurnInstructions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TurnInstructions::CopyFrom(const TurnInstructions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.TurnInstructions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TurnInstructions::IsInitialized() const {
  return true;
}

void TurnInstructions::Swap(TurnInstructions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TurnInstructions::InternalSwap(TurnInstructions* other) {
  using std::swap;
  turn_instruction_.InternalSwap(&other->turn_instruction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TurnInstructions::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TurnPenalties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TurnPenalties::kTurnPenaltiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TurnPenalties::TurnPenalties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_edge_2dbased_2dgraph_2eproto::scc_info_TurnPenalties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.TurnPenalties)
}
TurnPenalties::TurnPenalties(const TurnPenalties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      turn_penalties_(from.turn_penalties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbebg.TurnPenalties)
}

void TurnPenalties::SharedCtor() {
}

TurnPenalties::~TurnPenalties() {
  // @@protoc_insertion_point(destructor:pbebg.TurnPenalties)
  SharedDtor();
}

void TurnPenalties::SharedDtor() {
}

void TurnPenalties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TurnPenalties::descriptor() {
  ::protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TurnPenalties& TurnPenalties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_edge_2dbased_2dgraph_2eproto::scc_info_TurnPenalties.base);
  return *internal_default_instance();
}


void TurnPenalties::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.TurnPenalties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  turn_penalties_.Clear();
  _internal_metadata_.Clear();
}

bool TurnPenalties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.TurnPenalties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 turn_penalties = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_turn_penalties())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_turn_penalties())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.TurnPenalties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.TurnPenalties)
  return false;
#undef DO_
}

void TurnPenalties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.TurnPenalties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 turn_penalties = 1;
  if (this->turn_penalties_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _turn_penalties_cached_byte_size_));
  }
  for (int i = 0, n = this->turn_penalties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->turn_penalties(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.TurnPenalties)
}

::google::protobuf::uint8* TurnPenalties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.TurnPenalties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 turn_penalties = 1;
  if (this->turn_penalties_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _turn_penalties_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->turn_penalties_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.TurnPenalties)
  return target;
}

size_t TurnPenalties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.TurnPenalties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 turn_penalties = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->turn_penalties_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _turn_penalties_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TurnPenalties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.TurnPenalties)
  GOOGLE_DCHECK_NE(&from, this);
  const TurnPenalties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TurnPenalties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.TurnPenalties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.TurnPenalties)
    MergeFrom(*source);
  }
}

void TurnPenalties::MergeFrom(const TurnPenalties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.TurnPenalties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  turn_penalties_.MergeFrom(from.turn_penalties_);
}

void TurnPenalties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.TurnPenalties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TurnPenalties::CopyFrom(const TurnPenalties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.TurnPenalties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TurnPenalties::IsInitialized() const {
  return true;
}

void TurnPenalties::Swap(TurnPenalties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TurnPenalties::InternalSwap(TurnPenalties* other) {
  using std::swap;
  turn_penalties_.InternalSwap(&other->turn_penalties_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TurnPenalties::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pbebg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbebg::EdgeBasedNode* Arena::CreateMaybeMessage< ::pbebg::EdgeBasedNode >(Arena* arena) {
  return Arena::CreateInternal< ::pbebg::EdgeBasedNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbebg::NodeBasedAnnotation* Arena::CreateMaybeMessage< ::pbebg::NodeBasedAnnotation >(Arena* arena) {
  return Arena::CreateInternal< ::pbebg::NodeBasedAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbebg::EdgeBasedNodeContainer* Arena::CreateMaybeMessage< ::pbebg::EdgeBasedNodeContainer >(Arena* arena) {
  return Arena::CreateInternal< ::pbebg::EdgeBasedNodeContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbebg::TurnInstructions* Arena::CreateMaybeMessage< ::pbebg::TurnInstructions >(Arena* arena) {
  return Arena::CreateInternal< ::pbebg::TurnInstructions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pbebg::TurnPenalties* Arena::CreateMaybeMessage< ::pbebg::TurnPenalties >(Arena* arena) {
  return Arena::CreateInternal< ::pbebg::TurnPenalties >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
