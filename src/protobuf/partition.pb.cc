// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partition.proto

#include "partition.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace pbmldp {
class LevelDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelData>
      _instance;
} _LevelData_default_instance_;
class PartitionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Partitions>
      _instance;
} _Partitions_default_instance_;
}  // namespace pbmldp
namespace protobuf_partition_2eproto {
void InitDefaultsLevelDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pbmldp::_LevelData_default_instance_;
    new (ptr) ::pbmldp::LevelData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmldp::LevelData::InitAsDefaultInstance();
}

void InitDefaultsLevelData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLevelDataImpl);
}

void InitDefaultsPartitionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_partition_2eproto::InitDefaultsLevelData();
  {
    void* ptr = &::pbmldp::_Partitions_default_instance_;
    new (ptr) ::pbmldp::Partitions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmldp::Partitions::InitAsDefaultInstance();
}

void InitDefaultsPartitions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPartitionsImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::LevelData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::LevelData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::LevelData, numberlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::LevelData, lidxtooffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::LevelData, lidxtomask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::LevelData, bittolevel_),
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::Partitions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::Partitions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::Partitions, leveldata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldp::Partitions, partition_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pbmldp::LevelData)},
  { 13, 20, sizeof(::pbmldp::Partitions)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmldp::_LevelData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmldp::_Partitions_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "partition.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017partition.proto\022\006pbmldp\"^\n\tLevelData\022\023"
      "\n\013numberLevel\030\001 \001(\r\022\024\n\014lidxToOffset\030\002 \003("
      "\r\022\022\n\nlidxToMask\030\003 \003(\004\022\022\n\nbitToLevel\030\004 \003("
      "\r\"E\n\nPartitions\022$\n\tlevelData\030\001 \001(\0132\021.pbm"
      "ldp.LevelData\022\021\n\tpartition\030\002 \003(\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 192);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "partition.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_partition_2eproto
namespace pbmldp {

// ===================================================================

void LevelData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelData::kNumberLevelFieldNumber;
const int LevelData::kLidxToOffsetFieldNumber;
const int LevelData::kLidxToMaskFieldNumber;
const int LevelData::kBitToLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelData::LevelData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_partition_2eproto::InitDefaultsLevelData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmldp.LevelData)
}
LevelData::LevelData(const LevelData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      lidxtooffset_(from.lidxtooffset_),
      lidxtomask_(from.lidxtomask_),
      bittolevel_(from.bittolevel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  numberlevel_ = from.numberlevel_;
  // @@protoc_insertion_point(copy_constructor:pbmldp.LevelData)
}

void LevelData::SharedCtor() {
  _cached_size_ = 0;
  numberlevel_ = 0u;
}

LevelData::~LevelData() {
  // @@protoc_insertion_point(destructor:pbmldp.LevelData)
  SharedDtor();
}

void LevelData::SharedDtor() {
}

void LevelData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelData::descriptor() {
  ::protobuf_partition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_partition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelData& LevelData::default_instance() {
  ::protobuf_partition_2eproto::InitDefaultsLevelData();
  return *internal_default_instance();
}

LevelData* LevelData::New(::google::protobuf::Arena* arena) const {
  LevelData* n = new LevelData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmldp.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lidxtooffset_.Clear();
  lidxtomask_.Clear();
  bittolevel_.Clear();
  numberlevel_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LevelData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmldp.LevelData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 numberLevel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_numberlevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numberlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 lidxToOffset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_lidxtooffset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lidxtooffset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 lidxToMask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24u, input, this->mutable_lidxtomask())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_lidxtomask())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 bitToLevel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_bittolevel())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bittolevel())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmldp.LevelData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmldp.LevelData)
  return false;
#undef DO_
}

void LevelData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmldp.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 numberLevel = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->numberlevel(), output);
  }

  // repeated uint32 lidxToOffset = 2;
  for (int i = 0, n = this->lidxtooffset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->lidxtooffset(i), output);
  }

  // repeated uint64 lidxToMask = 3;
  for (int i = 0, n = this->lidxtomask_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->lidxtomask(i), output);
  }

  // repeated uint32 bitToLevel = 4;
  for (int i = 0, n = this->bittolevel_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->bittolevel(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmldp.LevelData)
}

::google::protobuf::uint8* LevelData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmldp.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 numberLevel = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->numberlevel(), target);
  }

  // repeated uint32 lidxToOffset = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->lidxtooffset_, target);

  // repeated uint64 lidxToMask = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(3, this->lidxtomask_, target);

  // repeated uint32 bitToLevel = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(4, this->bittolevel_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmldp.LevelData)
  return target;
}

size_t LevelData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmldp.LevelData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 lidxToOffset = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->lidxtooffset_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->lidxtooffset_size());
    total_size += data_size;
  }

  // repeated uint64 lidxToMask = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->lidxtomask_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->lidxtomask_size());
    total_size += data_size;
  }

  // repeated uint32 bitToLevel = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->bittolevel_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bittolevel_size());
    total_size += data_size;
  }

  // optional uint32 numberLevel = 1;
  if (has_numberlevel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numberlevel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmldp.LevelData)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmldp.LevelData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmldp.LevelData)
    MergeFrom(*source);
  }
}

void LevelData::MergeFrom(const LevelData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmldp.LevelData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lidxtooffset_.MergeFrom(from.lidxtooffset_);
  lidxtomask_.MergeFrom(from.lidxtomask_);
  bittolevel_.MergeFrom(from.bittolevel_);
  if (from.has_numberlevel()) {
    set_numberlevel(from.numberlevel());
  }
}

void LevelData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmldp.LevelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelData::CopyFrom(const LevelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmldp.LevelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelData::IsInitialized() const {
  return true;
}

void LevelData::Swap(LevelData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelData::InternalSwap(LevelData* other) {
  using std::swap;
  lidxtooffset_.InternalSwap(&other->lidxtooffset_);
  lidxtomask_.InternalSwap(&other->lidxtomask_);
  bittolevel_.InternalSwap(&other->bittolevel_);
  swap(numberlevel_, other->numberlevel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelData::GetMetadata() const {
  protobuf_partition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_partition_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Partitions::InitAsDefaultInstance() {
  ::pbmldp::_Partitions_default_instance_._instance.get_mutable()->leveldata_ = const_cast< ::pbmldp::LevelData*>(
      ::pbmldp::LevelData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Partitions::kLevelDataFieldNumber;
const int Partitions::kPartitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Partitions::Partitions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_partition_2eproto::InitDefaultsPartitions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmldp.Partitions)
}
Partitions::Partitions(const Partitions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      partition_(from.partition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_leveldata()) {
    leveldata_ = new ::pbmldp::LevelData(*from.leveldata_);
  } else {
    leveldata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pbmldp.Partitions)
}

void Partitions::SharedCtor() {
  _cached_size_ = 0;
  leveldata_ = NULL;
}

Partitions::~Partitions() {
  // @@protoc_insertion_point(destructor:pbmldp.Partitions)
  SharedDtor();
}

void Partitions::SharedDtor() {
  if (this != internal_default_instance()) delete leveldata_;
}

void Partitions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Partitions::descriptor() {
  ::protobuf_partition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_partition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Partitions& Partitions::default_instance() {
  ::protobuf_partition_2eproto::InitDefaultsPartitions();
  return *internal_default_instance();
}

Partitions* Partitions::New(::google::protobuf::Arena* arena) const {
  Partitions* n = new Partitions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Partitions::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmldp.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partition_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(leveldata_ != NULL);
    leveldata_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Partitions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmldp.Partitions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pbmldp.LevelData levelData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leveldata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 partition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_partition())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_partition())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmldp.Partitions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmldp.Partitions)
  return false;
#undef DO_
}

void Partitions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmldp.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pbmldp.LevelData levelData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->leveldata_, output);
  }

  // repeated uint64 partition = 2;
  for (int i = 0, n = this->partition_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->partition(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmldp.Partitions)
}

::google::protobuf::uint8* Partitions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmldp.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pbmldp.LevelData levelData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->leveldata_, deterministic, target);
  }

  // repeated uint64 partition = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->partition_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmldp.Partitions)
  return target;
}

size_t Partitions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmldp.Partitions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 partition = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->partition_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->partition_size());
    total_size += data_size;
  }

  // optional .pbmldp.LevelData levelData = 1;
  if (has_leveldata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->leveldata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Partitions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmldp.Partitions)
  GOOGLE_DCHECK_NE(&from, this);
  const Partitions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Partitions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmldp.Partitions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmldp.Partitions)
    MergeFrom(*source);
  }
}

void Partitions::MergeFrom(const Partitions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmldp.Partitions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partition_.MergeFrom(from.partition_);
  if (from.has_leveldata()) {
    mutable_leveldata()->::pbmldp::LevelData::MergeFrom(from.leveldata());
  }
}

void Partitions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmldp.Partitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Partitions::CopyFrom(const Partitions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmldp.Partitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Partitions::IsInitialized() const {
  return true;
}

void Partitions::Swap(Partitions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Partitions::InternalSwap(Partitions* other) {
  using std::swap;
  partition_.InternalSwap(&other->partition_);
  swap(leveldata_, other->leveldata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Partitions::GetMetadata() const {
  protobuf_partition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_partition_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pbmldp

// @@protoc_insertion_point(global_scope)
