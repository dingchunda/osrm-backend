// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cells.proto

#ifndef PROTOBUF_cells_2eproto__INCLUDED
#define PROTOBUF_cells_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_cells_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCellDataImpl();
void InitDefaultsCellData();
void InitDefaultsCellsImpl();
void InitDefaultsCells();
inline void InitDefaults() {
  InitDefaultsCellData();
  InitDefaultsCells();
}
}  // namespace protobuf_cells_2eproto
namespace pbmldc {
class CellData;
class CellDataDefaultTypeInternal;
extern CellDataDefaultTypeInternal _CellData_default_instance_;
class Cells;
class CellsDefaultTypeInternal;
extern CellsDefaultTypeInternal _Cells_default_instance_;
}  // namespace pbmldc
namespace pbmldc {

// ===================================================================

class CellData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmldc.CellData) */ {
 public:
  CellData();
  virtual ~CellData();

  CellData(const CellData& from);

  inline CellData& operator=(const CellData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CellData(CellData&& from) noexcept
    : CellData() {
    *this = ::std::move(from);
  }

  inline CellData& operator=(CellData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CellData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CellData* internal_default_instance() {
    return reinterpret_cast<const CellData*>(
               &_CellData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CellData* other);
  friend void swap(CellData& a, CellData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CellData* New() const PROTOBUF_FINAL { return New(NULL); }

  CellData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CellData& from);
  void MergeFrom(const CellData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CellData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 valueOffset = 1;
  bool has_valueoffset() const;
  void clear_valueoffset();
  static const int kValueOffsetFieldNumber = 1;
  ::google::protobuf::uint32 valueoffset() const;
  void set_valueoffset(::google::protobuf::uint32 value);

  // optional uint32 sourceBoundaryOffset = 2;
  bool has_sourceboundaryoffset() const;
  void clear_sourceboundaryoffset();
  static const int kSourceBoundaryOffsetFieldNumber = 2;
  ::google::protobuf::uint32 sourceboundaryoffset() const;
  void set_sourceboundaryoffset(::google::protobuf::uint32 value);

  // optional uint32 destinationBoundaryOffset = 3;
  bool has_destinationboundaryoffset() const;
  void clear_destinationboundaryoffset();
  static const int kDestinationBoundaryOffsetFieldNumber = 3;
  ::google::protobuf::uint32 destinationboundaryoffset() const;
  void set_destinationboundaryoffset(::google::protobuf::uint32 value);

  // optional uint32 sourceNodesNumber = 4;
  bool has_sourcenodesnumber() const;
  void clear_sourcenodesnumber();
  static const int kSourceNodesNumberFieldNumber = 4;
  ::google::protobuf::uint32 sourcenodesnumber() const;
  void set_sourcenodesnumber(::google::protobuf::uint32 value);

  // optional uint32 destinationNodesNumber = 5;
  bool has_destinationnodesnumber() const;
  void clear_destinationnodesnumber();
  static const int kDestinationNodesNumberFieldNumber = 5;
  ::google::protobuf::uint32 destinationnodesnumber() const;
  void set_destinationnodesnumber(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbmldc.CellData)
 private:
  void set_has_valueoffset();
  void clear_has_valueoffset();
  void set_has_sourceboundaryoffset();
  void clear_has_sourceboundaryoffset();
  void set_has_destinationboundaryoffset();
  void clear_has_destinationboundaryoffset();
  void set_has_sourcenodesnumber();
  void clear_has_sourcenodesnumber();
  void set_has_destinationnodesnumber();
  void clear_has_destinationnodesnumber();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 valueoffset_;
  ::google::protobuf::uint32 sourceboundaryoffset_;
  ::google::protobuf::uint32 destinationboundaryoffset_;
  ::google::protobuf::uint32 sourcenodesnumber_;
  ::google::protobuf::uint32 destinationnodesnumber_;
  friend struct ::protobuf_cells_2eproto::TableStruct;
  friend void ::protobuf_cells_2eproto::InitDefaultsCellDataImpl();
};
// -------------------------------------------------------------------

class Cells : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmldc.Cells) */ {
 public:
  Cells();
  virtual ~Cells();

  Cells(const Cells& from);

  inline Cells& operator=(const Cells& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Cells(Cells&& from) noexcept
    : Cells() {
    *this = ::std::move(from);
  }

  inline Cells& operator=(Cells&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cells& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Cells* internal_default_instance() {
    return reinterpret_cast<const Cells*>(
               &_Cells_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Cells* other);
  friend void swap(Cells& a, Cells& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Cells* New() const PROTOBUF_FINAL { return New(NULL); }

  Cells* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Cells& from);
  void MergeFrom(const Cells& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Cells* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 sourceBoundary = 1;
  int sourceboundary_size() const;
  void clear_sourceboundary();
  static const int kSourceBoundaryFieldNumber = 1;
  ::google::protobuf::uint32 sourceboundary(int index) const;
  void set_sourceboundary(int index, ::google::protobuf::uint32 value);
  void add_sourceboundary(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sourceboundary() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sourceboundary();

  // repeated uint32 destinationBoundary = 2;
  int destinationboundary_size() const;
  void clear_destinationboundary();
  static const int kDestinationBoundaryFieldNumber = 2;
  ::google::protobuf::uint32 destinationboundary(int index) const;
  void set_destinationboundary(int index, ::google::protobuf::uint32 value);
  void add_destinationboundary(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      destinationboundary() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_destinationboundary();

  // repeated .pbmldc.CellData cells = 3;
  int cells_size() const;
  void clear_cells();
  static const int kCellsFieldNumber = 3;
  const ::pbmldc::CellData& cells(int index) const;
  ::pbmldc::CellData* mutable_cells(int index);
  ::pbmldc::CellData* add_cells();
  ::google::protobuf::RepeatedPtrField< ::pbmldc::CellData >*
      mutable_cells();
  const ::google::protobuf::RepeatedPtrField< ::pbmldc::CellData >&
      cells() const;

  // repeated uint64 levelOffset = 4;
  int leveloffset_size() const;
  void clear_leveloffset();
  static const int kLevelOffsetFieldNumber = 4;
  ::google::protobuf::uint64 leveloffset(int index) const;
  void set_leveloffset(int index, ::google::protobuf::uint64 value);
  void add_leveloffset(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      leveloffset() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_leveloffset();

  // @@protoc_insertion_point(class_scope:pbmldc.Cells)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sourceboundary_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > destinationboundary_;
  ::google::protobuf::RepeatedPtrField< ::pbmldc::CellData > cells_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > leveloffset_;
  friend struct ::protobuf_cells_2eproto::TableStruct;
  friend void ::protobuf_cells_2eproto::InitDefaultsCellsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CellData

// optional uint32 valueOffset = 1;
inline bool CellData::has_valueoffset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CellData::set_has_valueoffset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CellData::clear_has_valueoffset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CellData::clear_valueoffset() {
  valueoffset_ = 0u;
  clear_has_valueoffset();
}
inline ::google::protobuf::uint32 CellData::valueoffset() const {
  // @@protoc_insertion_point(field_get:pbmldc.CellData.valueOffset)
  return valueoffset_;
}
inline void CellData::set_valueoffset(::google::protobuf::uint32 value) {
  set_has_valueoffset();
  valueoffset_ = value;
  // @@protoc_insertion_point(field_set:pbmldc.CellData.valueOffset)
}

// optional uint32 sourceBoundaryOffset = 2;
inline bool CellData::has_sourceboundaryoffset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CellData::set_has_sourceboundaryoffset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CellData::clear_has_sourceboundaryoffset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CellData::clear_sourceboundaryoffset() {
  sourceboundaryoffset_ = 0u;
  clear_has_sourceboundaryoffset();
}
inline ::google::protobuf::uint32 CellData::sourceboundaryoffset() const {
  // @@protoc_insertion_point(field_get:pbmldc.CellData.sourceBoundaryOffset)
  return sourceboundaryoffset_;
}
inline void CellData::set_sourceboundaryoffset(::google::protobuf::uint32 value) {
  set_has_sourceboundaryoffset();
  sourceboundaryoffset_ = value;
  // @@protoc_insertion_point(field_set:pbmldc.CellData.sourceBoundaryOffset)
}

// optional uint32 destinationBoundaryOffset = 3;
inline bool CellData::has_destinationboundaryoffset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CellData::set_has_destinationboundaryoffset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CellData::clear_has_destinationboundaryoffset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CellData::clear_destinationboundaryoffset() {
  destinationboundaryoffset_ = 0u;
  clear_has_destinationboundaryoffset();
}
inline ::google::protobuf::uint32 CellData::destinationboundaryoffset() const {
  // @@protoc_insertion_point(field_get:pbmldc.CellData.destinationBoundaryOffset)
  return destinationboundaryoffset_;
}
inline void CellData::set_destinationboundaryoffset(::google::protobuf::uint32 value) {
  set_has_destinationboundaryoffset();
  destinationboundaryoffset_ = value;
  // @@protoc_insertion_point(field_set:pbmldc.CellData.destinationBoundaryOffset)
}

// optional uint32 sourceNodesNumber = 4;
inline bool CellData::has_sourcenodesnumber() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CellData::set_has_sourcenodesnumber() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CellData::clear_has_sourcenodesnumber() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CellData::clear_sourcenodesnumber() {
  sourcenodesnumber_ = 0u;
  clear_has_sourcenodesnumber();
}
inline ::google::protobuf::uint32 CellData::sourcenodesnumber() const {
  // @@protoc_insertion_point(field_get:pbmldc.CellData.sourceNodesNumber)
  return sourcenodesnumber_;
}
inline void CellData::set_sourcenodesnumber(::google::protobuf::uint32 value) {
  set_has_sourcenodesnumber();
  sourcenodesnumber_ = value;
  // @@protoc_insertion_point(field_set:pbmldc.CellData.sourceNodesNumber)
}

// optional uint32 destinationNodesNumber = 5;
inline bool CellData::has_destinationnodesnumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CellData::set_has_destinationnodesnumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CellData::clear_has_destinationnodesnumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CellData::clear_destinationnodesnumber() {
  destinationnodesnumber_ = 0u;
  clear_has_destinationnodesnumber();
}
inline ::google::protobuf::uint32 CellData::destinationnodesnumber() const {
  // @@protoc_insertion_point(field_get:pbmldc.CellData.destinationNodesNumber)
  return destinationnodesnumber_;
}
inline void CellData::set_destinationnodesnumber(::google::protobuf::uint32 value) {
  set_has_destinationnodesnumber();
  destinationnodesnumber_ = value;
  // @@protoc_insertion_point(field_set:pbmldc.CellData.destinationNodesNumber)
}

// -------------------------------------------------------------------

// Cells

// repeated uint32 sourceBoundary = 1;
inline int Cells::sourceboundary_size() const {
  return sourceboundary_.size();
}
inline void Cells::clear_sourceboundary() {
  sourceboundary_.Clear();
}
inline ::google::protobuf::uint32 Cells::sourceboundary(int index) const {
  // @@protoc_insertion_point(field_get:pbmldc.Cells.sourceBoundary)
  return sourceboundary_.Get(index);
}
inline void Cells::set_sourceboundary(int index, ::google::protobuf::uint32 value) {
  sourceboundary_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmldc.Cells.sourceBoundary)
}
inline void Cells::add_sourceboundary(::google::protobuf::uint32 value) {
  sourceboundary_.Add(value);
  // @@protoc_insertion_point(field_add:pbmldc.Cells.sourceBoundary)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cells::sourceboundary() const {
  // @@protoc_insertion_point(field_list:pbmldc.Cells.sourceBoundary)
  return sourceboundary_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cells::mutable_sourceboundary() {
  // @@protoc_insertion_point(field_mutable_list:pbmldc.Cells.sourceBoundary)
  return &sourceboundary_;
}

// repeated uint32 destinationBoundary = 2;
inline int Cells::destinationboundary_size() const {
  return destinationboundary_.size();
}
inline void Cells::clear_destinationboundary() {
  destinationboundary_.Clear();
}
inline ::google::protobuf::uint32 Cells::destinationboundary(int index) const {
  // @@protoc_insertion_point(field_get:pbmldc.Cells.destinationBoundary)
  return destinationboundary_.Get(index);
}
inline void Cells::set_destinationboundary(int index, ::google::protobuf::uint32 value) {
  destinationboundary_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmldc.Cells.destinationBoundary)
}
inline void Cells::add_destinationboundary(::google::protobuf::uint32 value) {
  destinationboundary_.Add(value);
  // @@protoc_insertion_point(field_add:pbmldc.Cells.destinationBoundary)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cells::destinationboundary() const {
  // @@protoc_insertion_point(field_list:pbmldc.Cells.destinationBoundary)
  return destinationboundary_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cells::mutable_destinationboundary() {
  // @@protoc_insertion_point(field_mutable_list:pbmldc.Cells.destinationBoundary)
  return &destinationboundary_;
}

// repeated .pbmldc.CellData cells = 3;
inline int Cells::cells_size() const {
  return cells_.size();
}
inline void Cells::clear_cells() {
  cells_.Clear();
}
inline const ::pbmldc::CellData& Cells::cells(int index) const {
  // @@protoc_insertion_point(field_get:pbmldc.Cells.cells)
  return cells_.Get(index);
}
inline ::pbmldc::CellData* Cells::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:pbmldc.Cells.cells)
  return cells_.Mutable(index);
}
inline ::pbmldc::CellData* Cells::add_cells() {
  // @@protoc_insertion_point(field_add:pbmldc.Cells.cells)
  return cells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbmldc::CellData >*
Cells::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:pbmldc.Cells.cells)
  return &cells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbmldc::CellData >&
Cells::cells() const {
  // @@protoc_insertion_point(field_list:pbmldc.Cells.cells)
  return cells_;
}

// repeated uint64 levelOffset = 4;
inline int Cells::leveloffset_size() const {
  return leveloffset_.size();
}
inline void Cells::clear_leveloffset() {
  leveloffset_.Clear();
}
inline ::google::protobuf::uint64 Cells::leveloffset(int index) const {
  // @@protoc_insertion_point(field_get:pbmldc.Cells.levelOffset)
  return leveloffset_.Get(index);
}
inline void Cells::set_leveloffset(int index, ::google::protobuf::uint64 value) {
  leveloffset_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmldc.Cells.levelOffset)
}
inline void Cells::add_leveloffset(::google::protobuf::uint64 value) {
  leveloffset_.Add(value);
  // @@protoc_insertion_point(field_add:pbmldc.Cells.levelOffset)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Cells::leveloffset() const {
  // @@protoc_insertion_point(field_list:pbmldc.Cells.levelOffset)
  return leveloffset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Cells::mutable_leveloffset() {
  // @@protoc_insertion_point(field_mutable_list:pbmldc.Cells.levelOffset)
  return &leveloffset_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbmldc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cells_2eproto__INCLUDED
