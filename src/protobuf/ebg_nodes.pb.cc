// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebg_nodes.proto

#include "ebg_nodes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace pbmldebg {
class NodeDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeData>
      _instance;
} _NodeData_default_instance_;
class AnnotationDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnnotationData>
      _instance;
} _AnnotationData_default_instance_;
class EBGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EBG>
      _instance;
} _EBG_default_instance_;
}  // namespace pbmldebg
namespace protobuf_ebg_5fnodes_2eproto {
void InitDefaultsNodeDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pbmldebg::_NodeData_default_instance_;
    new (ptr) ::pbmldebg::NodeData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmldebg::NodeData::InitAsDefaultInstance();
}

void InitDefaultsNodeData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeDataImpl);
}

void InitDefaultsAnnotationDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pbmldebg::_AnnotationData_default_instance_;
    new (ptr) ::pbmldebg::AnnotationData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmldebg::AnnotationData::InitAsDefaultInstance();
}

void InitDefaultsAnnotationData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAnnotationDataImpl);
}

void InitDefaultsEBGImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ebg_5fnodes_2eproto::InitDefaultsNodeData();
  protobuf_ebg_5fnodes_2eproto::InitDefaultsAnnotationData();
  {
    void* ptr = &::pbmldebg::_EBG_default_instance_;
    new (ptr) ::pbmldebg::EBG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbmldebg::EBG::InitAsDefaultInstance();
}

void InitDefaultsEBG() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEBGImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::NodeData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::NodeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::NodeData, geometryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::NodeData, componentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::NodeData, annotationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::NodeData, segregated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::NodeData, istiny_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::AnnotationData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::AnnotationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::AnnotationData, nameid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::EBG, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::EBG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::EBG, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pbmldebg::EBG, annotations_),
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::pbmldebg::NodeData)},
  { 15, 21, sizeof(::pbmldebg::AnnotationData)},
  { 22, 29, sizeof(::pbmldebg::EBG)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmldebg::_NodeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmldebg::_AnnotationData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbmldebg::_EBG_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ebg_nodes.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ebg_nodes.proto\022\010pbmldebg\"m\n\010NodeData\022"
      "\022\n\ngeometryID\030\001 \001(\r\022\023\n\013componentID\030\002 \001(\r"
      "\022\024\n\014annotationID\030\003 \001(\r\022\022\n\nsegregated\030\004 \001"
      "(\010\022\016\n\006isTiny\030\005 \001(\010\" \n\016AnnotationData\022\016\n\006"
      "nameID\030\001 \001(\r\"W\n\003EBG\022!\n\005nodes\030\001 \003(\0132\022.pbm"
      "ldebg.NodeData\022-\n\013annotations\030\002 \003(\0132\030.pb"
      "mldebg.AnnotationData"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ebg_nodes.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ebg_5fnodes_2eproto
namespace pbmldebg {

// ===================================================================

void NodeData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeData::kGeometryIDFieldNumber;
const int NodeData::kComponentIDFieldNumber;
const int NodeData::kAnnotationIDFieldNumber;
const int NodeData::kSegregatedFieldNumber;
const int NodeData::kIsTinyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeData::NodeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ebg_5fnodes_2eproto::InitDefaultsNodeData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmldebg.NodeData)
}
NodeData::NodeData(const NodeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&geometryid_, &from.geometryid_,
    static_cast<size_t>(reinterpret_cast<char*>(&istiny_) -
    reinterpret_cast<char*>(&geometryid_)) + sizeof(istiny_));
  // @@protoc_insertion_point(copy_constructor:pbmldebg.NodeData)
}

void NodeData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&geometryid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&istiny_) -
      reinterpret_cast<char*>(&geometryid_)) + sizeof(istiny_));
}

NodeData::~NodeData() {
  // @@protoc_insertion_point(destructor:pbmldebg.NodeData)
  SharedDtor();
}

void NodeData::SharedDtor() {
}

void NodeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeData::descriptor() {
  ::protobuf_ebg_5fnodes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ebg_5fnodes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeData& NodeData::default_instance() {
  ::protobuf_ebg_5fnodes_2eproto::InitDefaultsNodeData();
  return *internal_default_instance();
}

NodeData* NodeData::New(::google::protobuf::Arena* arena) const {
  NodeData* n = new NodeData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmldebg.NodeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&geometryid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&istiny_) -
        reinterpret_cast<char*>(&geometryid_)) + sizeof(istiny_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NodeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmldebg.NodeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 geometryID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_geometryid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &geometryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 componentID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_componentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &componentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 annotationID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_annotationid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annotationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool segregated = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_segregated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &segregated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isTiny = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_istiny();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istiny_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmldebg.NodeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmldebg.NodeData)
  return false;
#undef DO_
}

void NodeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmldebg.NodeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 geometryID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->geometryid(), output);
  }

  // optional uint32 componentID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->componentid(), output);
  }

  // optional uint32 annotationID = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->annotationid(), output);
  }

  // optional bool segregated = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->segregated(), output);
  }

  // optional bool isTiny = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->istiny(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmldebg.NodeData)
}

::google::protobuf::uint8* NodeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmldebg.NodeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 geometryID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->geometryid(), target);
  }

  // optional uint32 componentID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->componentid(), target);
  }

  // optional uint32 annotationID = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->annotationid(), target);
  }

  // optional bool segregated = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->segregated(), target);
  }

  // optional bool isTiny = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->istiny(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmldebg.NodeData)
  return target;
}

size_t NodeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmldebg.NodeData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 geometryID = 1;
    if (has_geometryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->geometryid());
    }

    // optional uint32 componentID = 2;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->componentid());
    }

    // optional uint32 annotationID = 3;
    if (has_annotationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->annotationid());
    }

    // optional bool segregated = 4;
    if (has_segregated()) {
      total_size += 1 + 1;
    }

    // optional bool isTiny = 5;
    if (has_istiny()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmldebg.NodeData)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmldebg.NodeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmldebg.NodeData)
    MergeFrom(*source);
  }
}

void NodeData::MergeFrom(const NodeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmldebg.NodeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      geometryid_ = from.geometryid_;
    }
    if (cached_has_bits & 0x00000002u) {
      componentid_ = from.componentid_;
    }
    if (cached_has_bits & 0x00000004u) {
      annotationid_ = from.annotationid_;
    }
    if (cached_has_bits & 0x00000008u) {
      segregated_ = from.segregated_;
    }
    if (cached_has_bits & 0x00000010u) {
      istiny_ = from.istiny_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NodeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmldebg.NodeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeData::CopyFrom(const NodeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmldebg.NodeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeData::IsInitialized() const {
  return true;
}

void NodeData::Swap(NodeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeData::InternalSwap(NodeData* other) {
  using std::swap;
  swap(geometryid_, other->geometryid_);
  swap(componentid_, other->componentid_);
  swap(annotationid_, other->annotationid_);
  swap(segregated_, other->segregated_);
  swap(istiny_, other->istiny_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeData::GetMetadata() const {
  protobuf_ebg_5fnodes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ebg_5fnodes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnnotationData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotationData::kNameIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotationData::AnnotationData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ebg_5fnodes_2eproto::InitDefaultsAnnotationData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmldebg.AnnotationData)
}
AnnotationData::AnnotationData(const AnnotationData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nameid_ = from.nameid_;
  // @@protoc_insertion_point(copy_constructor:pbmldebg.AnnotationData)
}

void AnnotationData::SharedCtor() {
  _cached_size_ = 0;
  nameid_ = 0u;
}

AnnotationData::~AnnotationData() {
  // @@protoc_insertion_point(destructor:pbmldebg.AnnotationData)
  SharedDtor();
}

void AnnotationData::SharedDtor() {
}

void AnnotationData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnnotationData::descriptor() {
  ::protobuf_ebg_5fnodes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ebg_5fnodes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnotationData& AnnotationData::default_instance() {
  ::protobuf_ebg_5fnodes_2eproto::InitDefaultsAnnotationData();
  return *internal_default_instance();
}

AnnotationData* AnnotationData::New(::google::protobuf::Arena* arena) const {
  AnnotationData* n = new AnnotationData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnnotationData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmldebg.AnnotationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nameid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AnnotationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmldebg.AnnotationData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 nameID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_nameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmldebg.AnnotationData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmldebg.AnnotationData)
  return false;
#undef DO_
}

void AnnotationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmldebg.AnnotationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 nameID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nameid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmldebg.AnnotationData)
}

::google::protobuf::uint8* AnnotationData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmldebg.AnnotationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 nameID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nameid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmldebg.AnnotationData)
  return target;
}

size_t AnnotationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmldebg.AnnotationData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 nameID = 1;
  if (has_nameid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nameid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnnotationData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmldebg.AnnotationData)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotationData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotationData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmldebg.AnnotationData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmldebg.AnnotationData)
    MergeFrom(*source);
  }
}

void AnnotationData::MergeFrom(const AnnotationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmldebg.AnnotationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_nameid()) {
    set_nameid(from.nameid());
  }
}

void AnnotationData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmldebg.AnnotationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotationData::CopyFrom(const AnnotationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmldebg.AnnotationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotationData::IsInitialized() const {
  return true;
}

void AnnotationData::Swap(AnnotationData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnnotationData::InternalSwap(AnnotationData* other) {
  using std::swap;
  swap(nameid_, other->nameid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnnotationData::GetMetadata() const {
  protobuf_ebg_5fnodes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ebg_5fnodes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EBG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EBG::kNodesFieldNumber;
const int EBG::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EBG::EBG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ebg_5fnodes_2eproto::InitDefaultsEBG();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmldebg.EBG)
}
EBG::EBG(const EBG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      nodes_(from.nodes_),
      annotations_(from.annotations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmldebg.EBG)
}

void EBG::SharedCtor() {
  _cached_size_ = 0;
}

EBG::~EBG() {
  // @@protoc_insertion_point(destructor:pbmldebg.EBG)
  SharedDtor();
}

void EBG::SharedDtor() {
}

void EBG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EBG::descriptor() {
  ::protobuf_ebg_5fnodes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ebg_5fnodes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EBG& EBG::default_instance() {
  ::protobuf_ebg_5fnodes_2eproto::InitDefaultsEBG();
  return *internal_default_instance();
}

EBG* EBG::New(::google::protobuf::Arena* arena) const {
  EBG* n = new EBG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EBG::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmldebg.EBG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  annotations_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EBG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmldebg.EBG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pbmldebg.NodeData nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pbmldebg.AnnotationData annotations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmldebg.EBG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmldebg.EBG)
  return false;
#undef DO_
}

void EBG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmldebg.EBG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbmldebg.NodeData nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(static_cast<int>(i)), output);
  }

  // repeated .pbmldebg.AnnotationData annotations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->annotations(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmldebg.EBG)
}

::google::protobuf::uint8* EBG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmldebg.EBG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbmldebg.NodeData nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pbmldebg.AnnotationData annotations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->annotations(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmldebg.EBG)
  return target;
}

size_t EBG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmldebg.EBG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pbmldebg.NodeData nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .pbmldebg.AnnotationData annotations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->annotations(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EBG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmldebg.EBG)
  GOOGLE_DCHECK_NE(&from, this);
  const EBG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EBG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmldebg.EBG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmldebg.EBG)
    MergeFrom(*source);
  }
}

void EBG::MergeFrom(const EBG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmldebg.EBG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  annotations_.MergeFrom(from.annotations_);
}

void EBG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmldebg.EBG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EBG::CopyFrom(const EBG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmldebg.EBG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EBG::IsInitialized() const {
  return true;
}

void EBG::Swap(EBG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EBG::InternalSwap(EBG* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  annotations_.InternalSwap(&other->annotations_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EBG::GetMetadata() const {
  protobuf_ebg_5fnodes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ebg_5fnodes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pbmldebg

// @@protoc_insertion_point(global_scope)
