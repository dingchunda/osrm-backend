// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partition.proto

#ifndef PROTOBUF_partition_2eproto__INCLUDED
#define PROTOBUF_partition_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_partition_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLevelDataImpl();
void InitDefaultsLevelData();
void InitDefaultsPartitionsImpl();
void InitDefaultsPartitions();
inline void InitDefaults() {
  InitDefaultsLevelData();
  InitDefaultsPartitions();
}
}  // namespace protobuf_partition_2eproto
namespace pbmldp {
class LevelData;
class LevelDataDefaultTypeInternal;
extern LevelDataDefaultTypeInternal _LevelData_default_instance_;
class Partitions;
class PartitionsDefaultTypeInternal;
extern PartitionsDefaultTypeInternal _Partitions_default_instance_;
}  // namespace pbmldp
namespace pbmldp {

// ===================================================================

class LevelData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmldp.LevelData) */ {
 public:
  LevelData();
  virtual ~LevelData();

  LevelData(const LevelData& from);

  inline LevelData& operator=(const LevelData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelData(LevelData&& from) noexcept
    : LevelData() {
    *this = ::std::move(from);
  }

  inline LevelData& operator=(LevelData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LevelData* internal_default_instance() {
    return reinterpret_cast<const LevelData*>(
               &_LevelData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LevelData* other);
  friend void swap(LevelData& a, LevelData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelData* New() const PROTOBUF_FINAL { return New(NULL); }

  LevelData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LevelData& from);
  void MergeFrom(const LevelData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LevelData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 lidxToOffset = 2;
  int lidxtooffset_size() const;
  void clear_lidxtooffset();
  static const int kLidxToOffsetFieldNumber = 2;
  ::google::protobuf::uint32 lidxtooffset(int index) const;
  void set_lidxtooffset(int index, ::google::protobuf::uint32 value);
  void add_lidxtooffset(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lidxtooffset() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lidxtooffset();

  // repeated uint64 lidxToMask = 3;
  int lidxtomask_size() const;
  void clear_lidxtomask();
  static const int kLidxToMaskFieldNumber = 3;
  ::google::protobuf::uint64 lidxtomask(int index) const;
  void set_lidxtomask(int index, ::google::protobuf::uint64 value);
  void add_lidxtomask(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      lidxtomask() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_lidxtomask();

  // repeated uint32 bitToLevel = 4;
  int bittolevel_size() const;
  void clear_bittolevel();
  static const int kBitToLevelFieldNumber = 4;
  ::google::protobuf::uint32 bittolevel(int index) const;
  void set_bittolevel(int index, ::google::protobuf::uint32 value);
  void add_bittolevel(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bittolevel() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bittolevel();

  // optional uint32 numberLevel = 1;
  bool has_numberlevel() const;
  void clear_numberlevel();
  static const int kNumberLevelFieldNumber = 1;
  ::google::protobuf::uint32 numberlevel() const;
  void set_numberlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbmldp.LevelData)
 private:
  void set_has_numberlevel();
  void clear_has_numberlevel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lidxtooffset_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > lidxtomask_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bittolevel_;
  ::google::protobuf::uint32 numberlevel_;
  friend struct ::protobuf_partition_2eproto::TableStruct;
  friend void ::protobuf_partition_2eproto::InitDefaultsLevelDataImpl();
};
// -------------------------------------------------------------------

class Partitions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmldp.Partitions) */ {
 public:
  Partitions();
  virtual ~Partitions();

  Partitions(const Partitions& from);

  inline Partitions& operator=(const Partitions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Partitions(Partitions&& from) noexcept
    : Partitions() {
    *this = ::std::move(from);
  }

  inline Partitions& operator=(Partitions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Partitions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Partitions* internal_default_instance() {
    return reinterpret_cast<const Partitions*>(
               &_Partitions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Partitions* other);
  friend void swap(Partitions& a, Partitions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Partitions* New() const PROTOBUF_FINAL { return New(NULL); }

  Partitions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Partitions& from);
  void MergeFrom(const Partitions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Partitions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 partition = 2;
  int partition_size() const;
  void clear_partition();
  static const int kPartitionFieldNumber = 2;
  ::google::protobuf::uint64 partition(int index) const;
  void set_partition(int index, ::google::protobuf::uint64 value);
  void add_partition(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      partition() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_partition();

  // optional .pbmldp.LevelData levelData = 1;
  bool has_leveldata() const;
  void clear_leveldata();
  static const int kLevelDataFieldNumber = 1;
  const ::pbmldp::LevelData& leveldata() const;
  ::pbmldp::LevelData* release_leveldata();
  ::pbmldp::LevelData* mutable_leveldata();
  void set_allocated_leveldata(::pbmldp::LevelData* leveldata);

  // @@protoc_insertion_point(class_scope:pbmldp.Partitions)
 private:
  void set_has_leveldata();
  void clear_has_leveldata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > partition_;
  ::pbmldp::LevelData* leveldata_;
  friend struct ::protobuf_partition_2eproto::TableStruct;
  friend void ::protobuf_partition_2eproto::InitDefaultsPartitionsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LevelData

// optional uint32 numberLevel = 1;
inline bool LevelData::has_numberlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelData::set_has_numberlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelData::clear_has_numberlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelData::clear_numberlevel() {
  numberlevel_ = 0u;
  clear_has_numberlevel();
}
inline ::google::protobuf::uint32 LevelData::numberlevel() const {
  // @@protoc_insertion_point(field_get:pbmldp.LevelData.numberLevel)
  return numberlevel_;
}
inline void LevelData::set_numberlevel(::google::protobuf::uint32 value) {
  set_has_numberlevel();
  numberlevel_ = value;
  // @@protoc_insertion_point(field_set:pbmldp.LevelData.numberLevel)
}

// repeated uint32 lidxToOffset = 2;
inline int LevelData::lidxtooffset_size() const {
  return lidxtooffset_.size();
}
inline void LevelData::clear_lidxtooffset() {
  lidxtooffset_.Clear();
}
inline ::google::protobuf::uint32 LevelData::lidxtooffset(int index) const {
  // @@protoc_insertion_point(field_get:pbmldp.LevelData.lidxToOffset)
  return lidxtooffset_.Get(index);
}
inline void LevelData::set_lidxtooffset(int index, ::google::protobuf::uint32 value) {
  lidxtooffset_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmldp.LevelData.lidxToOffset)
}
inline void LevelData::add_lidxtooffset(::google::protobuf::uint32 value) {
  lidxtooffset_.Add(value);
  // @@protoc_insertion_point(field_add:pbmldp.LevelData.lidxToOffset)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LevelData::lidxtooffset() const {
  // @@protoc_insertion_point(field_list:pbmldp.LevelData.lidxToOffset)
  return lidxtooffset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LevelData::mutable_lidxtooffset() {
  // @@protoc_insertion_point(field_mutable_list:pbmldp.LevelData.lidxToOffset)
  return &lidxtooffset_;
}

// repeated uint64 lidxToMask = 3;
inline int LevelData::lidxtomask_size() const {
  return lidxtomask_.size();
}
inline void LevelData::clear_lidxtomask() {
  lidxtomask_.Clear();
}
inline ::google::protobuf::uint64 LevelData::lidxtomask(int index) const {
  // @@protoc_insertion_point(field_get:pbmldp.LevelData.lidxToMask)
  return lidxtomask_.Get(index);
}
inline void LevelData::set_lidxtomask(int index, ::google::protobuf::uint64 value) {
  lidxtomask_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmldp.LevelData.lidxToMask)
}
inline void LevelData::add_lidxtomask(::google::protobuf::uint64 value) {
  lidxtomask_.Add(value);
  // @@protoc_insertion_point(field_add:pbmldp.LevelData.lidxToMask)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LevelData::lidxtomask() const {
  // @@protoc_insertion_point(field_list:pbmldp.LevelData.lidxToMask)
  return lidxtomask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LevelData::mutable_lidxtomask() {
  // @@protoc_insertion_point(field_mutable_list:pbmldp.LevelData.lidxToMask)
  return &lidxtomask_;
}

// repeated uint32 bitToLevel = 4;
inline int LevelData::bittolevel_size() const {
  return bittolevel_.size();
}
inline void LevelData::clear_bittolevel() {
  bittolevel_.Clear();
}
inline ::google::protobuf::uint32 LevelData::bittolevel(int index) const {
  // @@protoc_insertion_point(field_get:pbmldp.LevelData.bitToLevel)
  return bittolevel_.Get(index);
}
inline void LevelData::set_bittolevel(int index, ::google::protobuf::uint32 value) {
  bittolevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmldp.LevelData.bitToLevel)
}
inline void LevelData::add_bittolevel(::google::protobuf::uint32 value) {
  bittolevel_.Add(value);
  // @@protoc_insertion_point(field_add:pbmldp.LevelData.bitToLevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LevelData::bittolevel() const {
  // @@protoc_insertion_point(field_list:pbmldp.LevelData.bitToLevel)
  return bittolevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LevelData::mutable_bittolevel() {
  // @@protoc_insertion_point(field_mutable_list:pbmldp.LevelData.bitToLevel)
  return &bittolevel_;
}

// -------------------------------------------------------------------

// Partitions

// optional .pbmldp.LevelData levelData = 1;
inline bool Partitions::has_leveldata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Partitions::set_has_leveldata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Partitions::clear_has_leveldata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Partitions::clear_leveldata() {
  if (leveldata_ != NULL) leveldata_->Clear();
  clear_has_leveldata();
}
inline const ::pbmldp::LevelData& Partitions::leveldata() const {
  const ::pbmldp::LevelData* p = leveldata_;
  // @@protoc_insertion_point(field_get:pbmldp.Partitions.levelData)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmldp::LevelData*>(
      &::pbmldp::_LevelData_default_instance_);
}
inline ::pbmldp::LevelData* Partitions::release_leveldata() {
  // @@protoc_insertion_point(field_release:pbmldp.Partitions.levelData)
  clear_has_leveldata();
  ::pbmldp::LevelData* temp = leveldata_;
  leveldata_ = NULL;
  return temp;
}
inline ::pbmldp::LevelData* Partitions::mutable_leveldata() {
  set_has_leveldata();
  if (leveldata_ == NULL) {
    leveldata_ = new ::pbmldp::LevelData;
  }
  // @@protoc_insertion_point(field_mutable:pbmldp.Partitions.levelData)
  return leveldata_;
}
inline void Partitions::set_allocated_leveldata(::pbmldp::LevelData* leveldata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete leveldata_;
  }
  if (leveldata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      leveldata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, leveldata, submessage_arena);
    }
    set_has_leveldata();
  } else {
    clear_has_leveldata();
  }
  leveldata_ = leveldata;
  // @@protoc_insertion_point(field_set_allocated:pbmldp.Partitions.levelData)
}

// repeated uint64 partition = 2;
inline int Partitions::partition_size() const {
  return partition_.size();
}
inline void Partitions::clear_partition() {
  partition_.Clear();
}
inline ::google::protobuf::uint64 Partitions::partition(int index) const {
  // @@protoc_insertion_point(field_get:pbmldp.Partitions.partition)
  return partition_.Get(index);
}
inline void Partitions::set_partition(int index, ::google::protobuf::uint64 value) {
  partition_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmldp.Partitions.partition)
}
inline void Partitions::add_partition(::google::protobuf::uint64 value) {
  partition_.Add(value);
  // @@protoc_insertion_point(field_add:pbmldp.Partitions.partition)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Partitions::partition() const {
  // @@protoc_insertion_point(field_list:pbmldp.Partitions.partition)
  return partition_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Partitions::mutable_partition() {
  // @@protoc_insertion_point(field_mutable_list:pbmldp.Partitions.partition)
  return &partition_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbmldp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_partition_2eproto__INCLUDED
