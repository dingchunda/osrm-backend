// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rtree.proto

#ifndef PROTOBUF_rtree_2eproto__INCLUDED
#define PROTOBUF_rtree_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_rtree_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsEdgeBasedNodeSegmentImpl();
void InitDefaultsEdgeBasedNodeSegment();
void InitDefaultsRectangleImpl();
void InitDefaultsRectangle();
void InitDefaultsRTreeNodeImpl();
void InitDefaultsRTreeNode();
void InitDefaultsRTreeImpl();
void InitDefaultsRTree();
inline void InitDefaults() {
  InitDefaultsEdgeBasedNodeSegment();
  InitDefaultsRectangle();
  InitDefaultsRTreeNode();
  InitDefaultsRTree();
}
}  // namespace protobuf_rtree_2eproto
namespace pbmldrtree {
class EdgeBasedNodeSegment;
class EdgeBasedNodeSegmentDefaultTypeInternal;
extern EdgeBasedNodeSegmentDefaultTypeInternal _EdgeBasedNodeSegment_default_instance_;
class RTree;
class RTreeDefaultTypeInternal;
extern RTreeDefaultTypeInternal _RTree_default_instance_;
class RTreeNode;
class RTreeNodeDefaultTypeInternal;
extern RTreeNodeDefaultTypeInternal _RTreeNode_default_instance_;
class Rectangle;
class RectangleDefaultTypeInternal;
extern RectangleDefaultTypeInternal _Rectangle_default_instance_;
}  // namespace pbmldrtree
namespace pbmldrtree {

// ===================================================================

class EdgeBasedNodeSegment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmldrtree.EdgeBasedNodeSegment) */ {
 public:
  EdgeBasedNodeSegment();
  virtual ~EdgeBasedNodeSegment();

  EdgeBasedNodeSegment(const EdgeBasedNodeSegment& from);

  inline EdgeBasedNodeSegment& operator=(const EdgeBasedNodeSegment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EdgeBasedNodeSegment(EdgeBasedNodeSegment&& from) noexcept
    : EdgeBasedNodeSegment() {
    *this = ::std::move(from);
  }

  inline EdgeBasedNodeSegment& operator=(EdgeBasedNodeSegment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EdgeBasedNodeSegment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EdgeBasedNodeSegment* internal_default_instance() {
    return reinterpret_cast<const EdgeBasedNodeSegment*>(
               &_EdgeBasedNodeSegment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(EdgeBasedNodeSegment* other);
  friend void swap(EdgeBasedNodeSegment& a, EdgeBasedNodeSegment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EdgeBasedNodeSegment* New() const PROTOBUF_FINAL { return New(NULL); }

  EdgeBasedNodeSegment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EdgeBasedNodeSegment& from);
  void MergeFrom(const EdgeBasedNodeSegment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EdgeBasedNodeSegment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 u = 1;
  bool has_u() const;
  void clear_u();
  static const int kUFieldNumber = 1;
  ::google::protobuf::uint32 u() const;
  void set_u(::google::protobuf::uint32 value);

  // optional uint32 v = 2;
  bool has_v() const;
  void clear_v();
  static const int kVFieldNumber = 2;
  ::google::protobuf::uint32 v() const;
  void set_v(::google::protobuf::uint32 value);

  // optional uint32 forward_segment_id = 3;
  bool has_forward_segment_id() const;
  void clear_forward_segment_id();
  static const int kForwardSegmentIdFieldNumber = 3;
  ::google::protobuf::uint32 forward_segment_id() const;
  void set_forward_segment_id(::google::protobuf::uint32 value);

  // optional uint32 reverse_segment_id = 4;
  bool has_reverse_segment_id() const;
  void clear_reverse_segment_id();
  static const int kReverseSegmentIdFieldNumber = 4;
  ::google::protobuf::uint32 reverse_segment_id() const;
  void set_reverse_segment_id(::google::protobuf::uint32 value);

  // optional uint32 fwd_segment_position = 5;
  bool has_fwd_segment_position() const;
  void clear_fwd_segment_position();
  static const int kFwdSegmentPositionFieldNumber = 5;
  ::google::protobuf::uint32 fwd_segment_position() const;
  void set_fwd_segment_position(::google::protobuf::uint32 value);

  // optional uint32 forwardEnabled = 6;
  bool has_forwardenabled() const;
  void clear_forwardenabled();
  static const int kForwardEnabledFieldNumber = 6;
  ::google::protobuf::uint32 forwardenabled() const;
  void set_forwardenabled(::google::protobuf::uint32 value);

  // optional uint32 reverseEnabled = 7;
  bool has_reverseenabled() const;
  void clear_reverseenabled();
  static const int kReverseEnabledFieldNumber = 7;
  ::google::protobuf::uint32 reverseenabled() const;
  void set_reverseenabled(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbmldrtree.EdgeBasedNodeSegment)
 private:
  void set_has_u();
  void clear_has_u();
  void set_has_v();
  void clear_has_v();
  void set_has_forward_segment_id();
  void clear_has_forward_segment_id();
  void set_has_reverse_segment_id();
  void clear_has_reverse_segment_id();
  void set_has_fwd_segment_position();
  void clear_has_fwd_segment_position();
  void set_has_forwardenabled();
  void clear_has_forwardenabled();
  void set_has_reverseenabled();
  void clear_has_reverseenabled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 u_;
  ::google::protobuf::uint32 v_;
  ::google::protobuf::uint32 forward_segment_id_;
  ::google::protobuf::uint32 reverse_segment_id_;
  ::google::protobuf::uint32 fwd_segment_position_;
  ::google::protobuf::uint32 forwardenabled_;
  ::google::protobuf::uint32 reverseenabled_;
  friend struct ::protobuf_rtree_2eproto::TableStruct;
  friend void ::protobuf_rtree_2eproto::InitDefaultsEdgeBasedNodeSegmentImpl();
};
// -------------------------------------------------------------------

class Rectangle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmldrtree.Rectangle) */ {
 public:
  Rectangle();
  virtual ~Rectangle();

  Rectangle(const Rectangle& from);

  inline Rectangle& operator=(const Rectangle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rectangle(Rectangle&& from) noexcept
    : Rectangle() {
    *this = ::std::move(from);
  }

  inline Rectangle& operator=(Rectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rectangle* internal_default_instance() {
    return reinterpret_cast<const Rectangle*>(
               &_Rectangle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Rectangle* other);
  friend void swap(Rectangle& a, Rectangle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rectangle* New() const PROTOBUF_FINAL { return New(NULL); }

  Rectangle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Rectangle& from);
  void MergeFrom(const Rectangle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Rectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 min_lat = 1;
  bool has_min_lat() const;
  void clear_min_lat();
  static const int kMinLatFieldNumber = 1;
  ::google::protobuf::int64 min_lat() const;
  void set_min_lat(::google::protobuf::int64 value);

  // optional sint64 min_lon = 2;
  bool has_min_lon() const;
  void clear_min_lon();
  static const int kMinLonFieldNumber = 2;
  ::google::protobuf::int64 min_lon() const;
  void set_min_lon(::google::protobuf::int64 value);

  // optional sint64 max_lat = 3;
  bool has_max_lat() const;
  void clear_max_lat();
  static const int kMaxLatFieldNumber = 3;
  ::google::protobuf::int64 max_lat() const;
  void set_max_lat(::google::protobuf::int64 value);

  // optional sint64 max_lon = 4;
  bool has_max_lon() const;
  void clear_max_lon();
  static const int kMaxLonFieldNumber = 4;
  ::google::protobuf::int64 max_lon() const;
  void set_max_lon(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pbmldrtree.Rectangle)
 private:
  void set_has_min_lat();
  void clear_has_min_lat();
  void set_has_min_lon();
  void clear_has_min_lon();
  void set_has_max_lat();
  void clear_has_max_lat();
  void set_has_max_lon();
  void clear_has_max_lon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 min_lat_;
  ::google::protobuf::int64 min_lon_;
  ::google::protobuf::int64 max_lat_;
  ::google::protobuf::int64 max_lon_;
  friend struct ::protobuf_rtree_2eproto::TableStruct;
  friend void ::protobuf_rtree_2eproto::InitDefaultsRectangleImpl();
};
// -------------------------------------------------------------------

class RTreeNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmldrtree.RTreeNode) */ {
 public:
  RTreeNode();
  virtual ~RTreeNode();

  RTreeNode(const RTreeNode& from);

  inline RTreeNode& operator=(const RTreeNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RTreeNode(RTreeNode&& from) noexcept
    : RTreeNode() {
    *this = ::std::move(from);
  }

  inline RTreeNode& operator=(RTreeNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RTreeNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RTreeNode* internal_default_instance() {
    return reinterpret_cast<const RTreeNode*>(
               &_RTreeNode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RTreeNode* other);
  friend void swap(RTreeNode& a, RTreeNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RTreeNode* New() const PROTOBUF_FINAL { return New(NULL); }

  RTreeNode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RTreeNode& from);
  void MergeFrom(const RTreeNode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RTreeNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbmldrtree.EdgeBasedNodeSegment segments = 3;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 3;
  const ::pbmldrtree::EdgeBasedNodeSegment& segments(int index) const;
  ::pbmldrtree::EdgeBasedNodeSegment* mutable_segments(int index);
  ::pbmldrtree::EdgeBasedNodeSegment* add_segments();
  ::google::protobuf::RepeatedPtrField< ::pbmldrtree::EdgeBasedNodeSegment >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::pbmldrtree::EdgeBasedNodeSegment >&
      segments() const;

  // optional .pbmldrtree.Rectangle rect = 2;
  bool has_rect() const;
  void clear_rect();
  static const int kRectFieldNumber = 2;
  const ::pbmldrtree::Rectangle& rect() const;
  ::pbmldrtree::Rectangle* release_rect();
  ::pbmldrtree::Rectangle* mutable_rect();
  void set_allocated_rect(::pbmldrtree::Rectangle* rect);

  // optional uint64 itemCount = 1;
  bool has_itemcount() const;
  void clear_itemcount();
  static const int kItemCountFieldNumber = 1;
  ::google::protobuf::uint64 itemcount() const;
  void set_itemcount(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pbmldrtree.RTreeNode)
 private:
  void set_has_itemcount();
  void clear_has_itemcount();
  void set_has_rect();
  void clear_has_rect();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pbmldrtree::EdgeBasedNodeSegment > segments_;
  ::pbmldrtree::Rectangle* rect_;
  ::google::protobuf::uint64 itemcount_;
  friend struct ::protobuf_rtree_2eproto::TableStruct;
  friend void ::protobuf_rtree_2eproto::InitDefaultsRTreeNodeImpl();
};
// -------------------------------------------------------------------

class RTree : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmldrtree.RTree) */ {
 public:
  RTree();
  virtual ~RTree();

  RTree(const RTree& from);

  inline RTree& operator=(const RTree& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RTree(RTree&& from) noexcept
    : RTree() {
    *this = ::std::move(from);
  }

  inline RTree& operator=(RTree&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RTree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RTree* internal_default_instance() {
    return reinterpret_cast<const RTree*>(
               &_RTree_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RTree* other);
  friend void swap(RTree& a, RTree& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RTree* New() const PROTOBUF_FINAL { return New(NULL); }

  RTree* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RTree& from);
  void MergeFrom(const RTree& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RTree* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbmldrtree.RTreeNode node = 1;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  const ::pbmldrtree::RTreeNode& node(int index) const;
  ::pbmldrtree::RTreeNode* mutable_node(int index);
  ::pbmldrtree::RTreeNode* add_node();
  ::google::protobuf::RepeatedPtrField< ::pbmldrtree::RTreeNode >*
      mutable_node();
  const ::google::protobuf::RepeatedPtrField< ::pbmldrtree::RTreeNode >&
      node() const;

  // @@protoc_insertion_point(class_scope:pbmldrtree.RTree)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pbmldrtree::RTreeNode > node_;
  friend struct ::protobuf_rtree_2eproto::TableStruct;
  friend void ::protobuf_rtree_2eproto::InitDefaultsRTreeImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EdgeBasedNodeSegment

// optional uint32 u = 1;
inline bool EdgeBasedNodeSegment::has_u() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EdgeBasedNodeSegment::set_has_u() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EdgeBasedNodeSegment::clear_has_u() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EdgeBasedNodeSegment::clear_u() {
  u_ = 0u;
  clear_has_u();
}
inline ::google::protobuf::uint32 EdgeBasedNodeSegment::u() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.EdgeBasedNodeSegment.u)
  return u_;
}
inline void EdgeBasedNodeSegment::set_u(::google::protobuf::uint32 value) {
  set_has_u();
  u_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.EdgeBasedNodeSegment.u)
}

// optional uint32 v = 2;
inline bool EdgeBasedNodeSegment::has_v() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EdgeBasedNodeSegment::set_has_v() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EdgeBasedNodeSegment::clear_has_v() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EdgeBasedNodeSegment::clear_v() {
  v_ = 0u;
  clear_has_v();
}
inline ::google::protobuf::uint32 EdgeBasedNodeSegment::v() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.EdgeBasedNodeSegment.v)
  return v_;
}
inline void EdgeBasedNodeSegment::set_v(::google::protobuf::uint32 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.EdgeBasedNodeSegment.v)
}

// optional uint32 forward_segment_id = 3;
inline bool EdgeBasedNodeSegment::has_forward_segment_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EdgeBasedNodeSegment::set_has_forward_segment_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EdgeBasedNodeSegment::clear_has_forward_segment_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EdgeBasedNodeSegment::clear_forward_segment_id() {
  forward_segment_id_ = 0u;
  clear_has_forward_segment_id();
}
inline ::google::protobuf::uint32 EdgeBasedNodeSegment::forward_segment_id() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.EdgeBasedNodeSegment.forward_segment_id)
  return forward_segment_id_;
}
inline void EdgeBasedNodeSegment::set_forward_segment_id(::google::protobuf::uint32 value) {
  set_has_forward_segment_id();
  forward_segment_id_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.EdgeBasedNodeSegment.forward_segment_id)
}

// optional uint32 reverse_segment_id = 4;
inline bool EdgeBasedNodeSegment::has_reverse_segment_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EdgeBasedNodeSegment::set_has_reverse_segment_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EdgeBasedNodeSegment::clear_has_reverse_segment_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EdgeBasedNodeSegment::clear_reverse_segment_id() {
  reverse_segment_id_ = 0u;
  clear_has_reverse_segment_id();
}
inline ::google::protobuf::uint32 EdgeBasedNodeSegment::reverse_segment_id() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.EdgeBasedNodeSegment.reverse_segment_id)
  return reverse_segment_id_;
}
inline void EdgeBasedNodeSegment::set_reverse_segment_id(::google::protobuf::uint32 value) {
  set_has_reverse_segment_id();
  reverse_segment_id_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.EdgeBasedNodeSegment.reverse_segment_id)
}

// optional uint32 fwd_segment_position = 5;
inline bool EdgeBasedNodeSegment::has_fwd_segment_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EdgeBasedNodeSegment::set_has_fwd_segment_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EdgeBasedNodeSegment::clear_has_fwd_segment_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EdgeBasedNodeSegment::clear_fwd_segment_position() {
  fwd_segment_position_ = 0u;
  clear_has_fwd_segment_position();
}
inline ::google::protobuf::uint32 EdgeBasedNodeSegment::fwd_segment_position() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.EdgeBasedNodeSegment.fwd_segment_position)
  return fwd_segment_position_;
}
inline void EdgeBasedNodeSegment::set_fwd_segment_position(::google::protobuf::uint32 value) {
  set_has_fwd_segment_position();
  fwd_segment_position_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.EdgeBasedNodeSegment.fwd_segment_position)
}

// optional uint32 forwardEnabled = 6;
inline bool EdgeBasedNodeSegment::has_forwardenabled() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EdgeBasedNodeSegment::set_has_forwardenabled() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EdgeBasedNodeSegment::clear_has_forwardenabled() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EdgeBasedNodeSegment::clear_forwardenabled() {
  forwardenabled_ = 0u;
  clear_has_forwardenabled();
}
inline ::google::protobuf::uint32 EdgeBasedNodeSegment::forwardenabled() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.EdgeBasedNodeSegment.forwardEnabled)
  return forwardenabled_;
}
inline void EdgeBasedNodeSegment::set_forwardenabled(::google::protobuf::uint32 value) {
  set_has_forwardenabled();
  forwardenabled_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.EdgeBasedNodeSegment.forwardEnabled)
}

// optional uint32 reverseEnabled = 7;
inline bool EdgeBasedNodeSegment::has_reverseenabled() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EdgeBasedNodeSegment::set_has_reverseenabled() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EdgeBasedNodeSegment::clear_has_reverseenabled() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EdgeBasedNodeSegment::clear_reverseenabled() {
  reverseenabled_ = 0u;
  clear_has_reverseenabled();
}
inline ::google::protobuf::uint32 EdgeBasedNodeSegment::reverseenabled() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.EdgeBasedNodeSegment.reverseEnabled)
  return reverseenabled_;
}
inline void EdgeBasedNodeSegment::set_reverseenabled(::google::protobuf::uint32 value) {
  set_has_reverseenabled();
  reverseenabled_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.EdgeBasedNodeSegment.reverseEnabled)
}

// -------------------------------------------------------------------

// Rectangle

// optional sint64 min_lat = 1;
inline bool Rectangle::has_min_lat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rectangle::set_has_min_lat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rectangle::clear_has_min_lat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rectangle::clear_min_lat() {
  min_lat_ = GOOGLE_LONGLONG(0);
  clear_has_min_lat();
}
inline ::google::protobuf::int64 Rectangle::min_lat() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.Rectangle.min_lat)
  return min_lat_;
}
inline void Rectangle::set_min_lat(::google::protobuf::int64 value) {
  set_has_min_lat();
  min_lat_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.Rectangle.min_lat)
}

// optional sint64 min_lon = 2;
inline bool Rectangle::has_min_lon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rectangle::set_has_min_lon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rectangle::clear_has_min_lon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rectangle::clear_min_lon() {
  min_lon_ = GOOGLE_LONGLONG(0);
  clear_has_min_lon();
}
inline ::google::protobuf::int64 Rectangle::min_lon() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.Rectangle.min_lon)
  return min_lon_;
}
inline void Rectangle::set_min_lon(::google::protobuf::int64 value) {
  set_has_min_lon();
  min_lon_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.Rectangle.min_lon)
}

// optional sint64 max_lat = 3;
inline bool Rectangle::has_max_lat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Rectangle::set_has_max_lat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Rectangle::clear_has_max_lat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Rectangle::clear_max_lat() {
  max_lat_ = GOOGLE_LONGLONG(0);
  clear_has_max_lat();
}
inline ::google::protobuf::int64 Rectangle::max_lat() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.Rectangle.max_lat)
  return max_lat_;
}
inline void Rectangle::set_max_lat(::google::protobuf::int64 value) {
  set_has_max_lat();
  max_lat_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.Rectangle.max_lat)
}

// optional sint64 max_lon = 4;
inline bool Rectangle::has_max_lon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Rectangle::set_has_max_lon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Rectangle::clear_has_max_lon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Rectangle::clear_max_lon() {
  max_lon_ = GOOGLE_LONGLONG(0);
  clear_has_max_lon();
}
inline ::google::protobuf::int64 Rectangle::max_lon() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.Rectangle.max_lon)
  return max_lon_;
}
inline void Rectangle::set_max_lon(::google::protobuf::int64 value) {
  set_has_max_lon();
  max_lon_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.Rectangle.max_lon)
}

// -------------------------------------------------------------------

// RTreeNode

// optional uint64 itemCount = 1;
inline bool RTreeNode::has_itemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RTreeNode::set_has_itemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RTreeNode::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RTreeNode::clear_itemcount() {
  itemcount_ = GOOGLE_ULONGLONG(0);
  clear_has_itemcount();
}
inline ::google::protobuf::uint64 RTreeNode::itemcount() const {
  // @@protoc_insertion_point(field_get:pbmldrtree.RTreeNode.itemCount)
  return itemcount_;
}
inline void RTreeNode::set_itemcount(::google::protobuf::uint64 value) {
  set_has_itemcount();
  itemcount_ = value;
  // @@protoc_insertion_point(field_set:pbmldrtree.RTreeNode.itemCount)
}

// optional .pbmldrtree.Rectangle rect = 2;
inline bool RTreeNode::has_rect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RTreeNode::set_has_rect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RTreeNode::clear_has_rect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RTreeNode::clear_rect() {
  if (rect_ != NULL) rect_->Clear();
  clear_has_rect();
}
inline const ::pbmldrtree::Rectangle& RTreeNode::rect() const {
  const ::pbmldrtree::Rectangle* p = rect_;
  // @@protoc_insertion_point(field_get:pbmldrtree.RTreeNode.rect)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmldrtree::Rectangle*>(
      &::pbmldrtree::_Rectangle_default_instance_);
}
inline ::pbmldrtree::Rectangle* RTreeNode::release_rect() {
  // @@protoc_insertion_point(field_release:pbmldrtree.RTreeNode.rect)
  clear_has_rect();
  ::pbmldrtree::Rectangle* temp = rect_;
  rect_ = NULL;
  return temp;
}
inline ::pbmldrtree::Rectangle* RTreeNode::mutable_rect() {
  set_has_rect();
  if (rect_ == NULL) {
    rect_ = new ::pbmldrtree::Rectangle;
  }
  // @@protoc_insertion_point(field_mutable:pbmldrtree.RTreeNode.rect)
  return rect_;
}
inline void RTreeNode::set_allocated_rect(::pbmldrtree::Rectangle* rect) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rect_;
  }
  if (rect) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rect = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rect, submessage_arena);
    }
    set_has_rect();
  } else {
    clear_has_rect();
  }
  rect_ = rect;
  // @@protoc_insertion_point(field_set_allocated:pbmldrtree.RTreeNode.rect)
}

// repeated .pbmldrtree.EdgeBasedNodeSegment segments = 3;
inline int RTreeNode::segments_size() const {
  return segments_.size();
}
inline void RTreeNode::clear_segments() {
  segments_.Clear();
}
inline const ::pbmldrtree::EdgeBasedNodeSegment& RTreeNode::segments(int index) const {
  // @@protoc_insertion_point(field_get:pbmldrtree.RTreeNode.segments)
  return segments_.Get(index);
}
inline ::pbmldrtree::EdgeBasedNodeSegment* RTreeNode::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:pbmldrtree.RTreeNode.segments)
  return segments_.Mutable(index);
}
inline ::pbmldrtree::EdgeBasedNodeSegment* RTreeNode::add_segments() {
  // @@protoc_insertion_point(field_add:pbmldrtree.RTreeNode.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbmldrtree::EdgeBasedNodeSegment >*
RTreeNode::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:pbmldrtree.RTreeNode.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbmldrtree::EdgeBasedNodeSegment >&
RTreeNode::segments() const {
  // @@protoc_insertion_point(field_list:pbmldrtree.RTreeNode.segments)
  return segments_;
}

// -------------------------------------------------------------------

// RTree

// repeated .pbmldrtree.RTreeNode node = 1;
inline int RTree::node_size() const {
  return node_.size();
}
inline void RTree::clear_node() {
  node_.Clear();
}
inline const ::pbmldrtree::RTreeNode& RTree::node(int index) const {
  // @@protoc_insertion_point(field_get:pbmldrtree.RTree.node)
  return node_.Get(index);
}
inline ::pbmldrtree::RTreeNode* RTree::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:pbmldrtree.RTree.node)
  return node_.Mutable(index);
}
inline ::pbmldrtree::RTreeNode* RTree::add_node() {
  // @@protoc_insertion_point(field_add:pbmldrtree.RTree.node)
  return node_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbmldrtree::RTreeNode >*
RTree::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:pbmldrtree.RTree.node)
  return &node_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbmldrtree::RTreeNode >&
RTree::node() const {
  // @@protoc_insertion_point(field_list:pbmldrtree.RTree.node)
  return node_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbmldrtree

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rtree_2eproto__INCLUDED
