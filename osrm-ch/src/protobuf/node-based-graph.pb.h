// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: node-based-graph.proto

#ifndef PROTOBUF_node_2dbased_2dgraph_2eproto__INCLUDED
#define PROTOBUF_node_2dbased_2dgraph_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace pbnbg {
class CompressedContainer;
class CompressedContainerDefaultTypeInternal;
extern CompressedContainerDefaultTypeInternal _CompressedContainer_default_instance_;
class CompressedEdge;
class CompressedEdgeDefaultTypeInternal;
extern CompressedEdgeDefaultTypeInternal _CompressedEdge_default_instance_;
class Edge;
class EdgeDefaultTypeInternal;
extern EdgeDefaultTypeInternal _Edge_default_instance_;
class EdgeBucket;
class EdgeBucketDefaultTypeInternal;
extern EdgeBucketDefaultTypeInternal _EdgeBucket_default_instance_;
class EdgeList;
class EdgeListDefaultTypeInternal;
extern EdgeListDefaultTypeInternal _EdgeList_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class NodeList;
class NodeListDefaultTypeInternal;
extern NodeListDefaultTypeInternal _NodeList_default_instance_;
class StreetNames;
class StreetNamesDefaultTypeInternal;
extern StreetNamesDefaultTypeInternal _StreetNames_default_instance_;
}  // namespace pbnbg

namespace pbnbg {

namespace protobuf_node_2dbased_2dgraph_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_node_2dbased_2dgraph_2eproto

// ===================================================================

class Node : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbnbg.Node) */ {
 public:
  Node();
  virtual ~Node();

  Node(const Node& from);

  inline Node& operator=(const Node& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Node& default_instance();

  static inline const Node* internal_default_instance() {
    return reinterpret_cast<const Node*>(
               &_Node_default_instance_);
  }

  void Swap(Node* other);

  // implements Message ----------------------------------------------

  inline Node* New() const PROTOBUF_FINAL { return New(NULL); }

  Node* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Node& from);
  void MergeFrom(const Node& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Node* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 lat = 1;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  ::google::protobuf::int32 lat() const;
  void set_lat(::google::protobuf::int32 value);

  // int32 lon = 2;
  void clear_lon();
  static const int kLonFieldNumber = 2;
  ::google::protobuf::int32 lon() const;
  void set_lon(::google::protobuf::int32 value);

  // int64 osm_id = 3;
  void clear_osm_id();
  static const int kOsmIdFieldNumber = 3;
  ::google::protobuf::int64 osm_id() const;
  void set_osm_id(::google::protobuf::int64 value);

  // bool barrier = 4;
  void clear_barrier();
  static const int kBarrierFieldNumber = 4;
  bool barrier() const;
  void set_barrier(bool value);

  // bool traffic_light = 5;
  void clear_traffic_light();
  static const int kTrafficLightFieldNumber = 5;
  bool traffic_light() const;
  void set_traffic_light(bool value);

  // @@protoc_insertion_point(class_scope:pbnbg.Node)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 lat_;
  ::google::protobuf::int32 lon_;
  ::google::protobuf::int64 osm_id_;
  bool barrier_;
  bool traffic_light_;
  mutable int _cached_size_;
  friend struct  protobuf_node_2dbased_2dgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbnbg.NodeList) */ {
 public:
  NodeList();
  virtual ~NodeList();

  NodeList(const NodeList& from);

  inline NodeList& operator=(const NodeList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeList& default_instance();

  static inline const NodeList* internal_default_instance() {
    return reinterpret_cast<const NodeList*>(
               &_NodeList_default_instance_);
  }

  void Swap(NodeList* other);

  // implements Message ----------------------------------------------

  inline NodeList* New() const PROTOBUF_FINAL { return New(NULL); }

  NodeList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NodeList& from);
  void MergeFrom(const NodeList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NodeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbnbg.Node nodes = 2;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 2;
  const ::pbnbg::Node& nodes(int index) const;
  ::pbnbg::Node* mutable_nodes(int index);
  ::pbnbg::Node* add_nodes();
  ::google::protobuf::RepeatedPtrField< ::pbnbg::Node >*
      mutable_nodes();
  const ::google::protobuf::RepeatedPtrField< ::pbnbg::Node >&
      nodes() const;

  // int64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pbnbg.NodeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pbnbg::Node > nodes_;
  ::google::protobuf::int64 count_;
  mutable int _cached_size_;
  friend struct  protobuf_node_2dbased_2dgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Edge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbnbg.Edge) */ {
 public:
  Edge();
  virtual ~Edge();

  Edge(const Edge& from);

  inline Edge& operator=(const Edge& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Edge& default_instance();

  static inline const Edge* internal_default_instance() {
    return reinterpret_cast<const Edge*>(
               &_Edge_default_instance_);
  }

  void Swap(Edge* other);

  // implements Message ----------------------------------------------

  inline Edge* New() const PROTOBUF_FINAL { return New(NULL); }

  Edge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Edge& from);
  void MergeFrom(const Edge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Edge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::int64 source() const;
  void set_source(::google::protobuf::int64 value);

  // int64 target = 2;
  void clear_target();
  static const int kTargetFieldNumber = 2;
  ::google::protobuf::int64 target() const;
  void set_target(::google::protobuf::int64 value);

  // int64 name_id = 3;
  void clear_name_id();
  static const int kNameIdFieldNumber = 3;
  ::google::protobuf::int64 name_id() const;
  void set_name_id(::google::protobuf::int64 value);

  // int64 weight = 4;
  void clear_weight();
  static const int kWeightFieldNumber = 4;
  ::google::protobuf::int64 weight() const;
  void set_weight(::google::protobuf::int64 value);

  // bool forward = 5;
  void clear_forward();
  static const int kForwardFieldNumber = 5;
  bool forward() const;
  void set_forward(bool value);

  // bool backward = 6;
  void clear_backward();
  static const int kBackwardFieldNumber = 6;
  bool backward() const;
  void set_backward(bool value);

  // bool roundabout = 7;
  void clear_roundabout();
  static const int kRoundaboutFieldNumber = 7;
  bool roundabout() const;
  void set_roundabout(bool value);

  // bool access_restricted = 8;
  void clear_access_restricted();
  static const int kAccessRestrictedFieldNumber = 8;
  bool access_restricted() const;
  void set_access_restricted(bool value);

  // bool startpoint = 9;
  void clear_startpoint();
  static const int kStartpointFieldNumber = 9;
  bool startpoint() const;
  void set_startpoint(bool value);

  // bool is_split = 10;
  void clear_is_split();
  static const int kIsSplitFieldNumber = 10;
  bool is_split() const;
  void set_is_split(bool value);

  // @@protoc_insertion_point(class_scope:pbnbg.Edge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 source_;
  ::google::protobuf::int64 target_;
  ::google::protobuf::int64 name_id_;
  ::google::protobuf::int64 weight_;
  bool forward_;
  bool backward_;
  bool roundabout_;
  bool access_restricted_;
  bool startpoint_;
  bool is_split_;
  mutable int _cached_size_;
  friend struct  protobuf_node_2dbased_2dgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EdgeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbnbg.EdgeList) */ {
 public:
  EdgeList();
  virtual ~EdgeList();

  EdgeList(const EdgeList& from);

  inline EdgeList& operator=(const EdgeList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EdgeList& default_instance();

  static inline const EdgeList* internal_default_instance() {
    return reinterpret_cast<const EdgeList*>(
               &_EdgeList_default_instance_);
  }

  void Swap(EdgeList* other);

  // implements Message ----------------------------------------------

  inline EdgeList* New() const PROTOBUF_FINAL { return New(NULL); }

  EdgeList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EdgeList& from);
  void MergeFrom(const EdgeList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EdgeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbnbg.Edge edges = 2;
  int edges_size() const;
  void clear_edges();
  static const int kEdgesFieldNumber = 2;
  const ::pbnbg::Edge& edges(int index) const;
  ::pbnbg::Edge* mutable_edges(int index);
  ::pbnbg::Edge* add_edges();
  ::google::protobuf::RepeatedPtrField< ::pbnbg::Edge >*
      mutable_edges();
  const ::google::protobuf::RepeatedPtrField< ::pbnbg::Edge >&
      edges() const;

  // int64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pbnbg.EdgeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pbnbg::Edge > edges_;
  ::google::protobuf::int64 count_;
  mutable int _cached_size_;
  friend struct  protobuf_node_2dbased_2dgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompressedEdge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbnbg.CompressedEdge) */ {
 public:
  CompressedEdge();
  virtual ~CompressedEdge();

  CompressedEdge(const CompressedEdge& from);

  inline CompressedEdge& operator=(const CompressedEdge& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompressedEdge& default_instance();

  static inline const CompressedEdge* internal_default_instance() {
    return reinterpret_cast<const CompressedEdge*>(
               &_CompressedEdge_default_instance_);
  }

  void Swap(CompressedEdge* other);

  // implements Message ----------------------------------------------

  inline CompressedEdge* New() const PROTOBUF_FINAL { return New(NULL); }

  CompressedEdge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompressedEdge& from);
  void MergeFrom(const CompressedEdge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompressedEdge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 node_id = 1;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 1;
  ::google::protobuf::uint64 node_id() const;
  void set_node_id(::google::protobuf::uint64 value);

  // int64 weight = 2;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  ::google::protobuf::int64 weight() const;
  void set_weight(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pbnbg.CompressedEdge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 node_id_;
  ::google::protobuf::int64 weight_;
  mutable int _cached_size_;
  friend struct  protobuf_node_2dbased_2dgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EdgeBucket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbnbg.EdgeBucket) */ {
 public:
  EdgeBucket();
  virtual ~EdgeBucket();

  EdgeBucket(const EdgeBucket& from);

  inline EdgeBucket& operator=(const EdgeBucket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EdgeBucket& default_instance();

  static inline const EdgeBucket* internal_default_instance() {
    return reinterpret_cast<const EdgeBucket*>(
               &_EdgeBucket_default_instance_);
  }

  void Swap(EdgeBucket* other);

  // implements Message ----------------------------------------------

  inline EdgeBucket* New() const PROTOBUF_FINAL { return New(NULL); }

  EdgeBucket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EdgeBucket& from);
  void MergeFrom(const EdgeBucket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EdgeBucket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbnbg.CompressedEdge edges = 1;
  int edges_size() const;
  void clear_edges();
  static const int kEdgesFieldNumber = 1;
  const ::pbnbg::CompressedEdge& edges(int index) const;
  ::pbnbg::CompressedEdge* mutable_edges(int index);
  ::pbnbg::CompressedEdge* add_edges();
  ::google::protobuf::RepeatedPtrField< ::pbnbg::CompressedEdge >*
      mutable_edges();
  const ::google::protobuf::RepeatedPtrField< ::pbnbg::CompressedEdge >&
      edges() const;

  // @@protoc_insertion_point(class_scope:pbnbg.EdgeBucket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pbnbg::CompressedEdge > edges_;
  mutable int _cached_size_;
  friend struct  protobuf_node_2dbased_2dgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompressedContainer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbnbg.CompressedContainer) */ {
 public:
  CompressedContainer();
  virtual ~CompressedContainer();

  CompressedContainer(const CompressedContainer& from);

  inline CompressedContainer& operator=(const CompressedContainer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompressedContainer& default_instance();

  static inline const CompressedContainer* internal_default_instance() {
    return reinterpret_cast<const CompressedContainer*>(
               &_CompressedContainer_default_instance_);
  }

  void Swap(CompressedContainer* other);

  // implements Message ----------------------------------------------

  inline CompressedContainer* New() const PROTOBUF_FINAL { return New(NULL); }

  CompressedContainer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompressedContainer& from);
  void MergeFrom(const CompressedContainer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompressedContainer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbnbg.EdgeBucket geometries = 1;
  int geometries_size() const;
  void clear_geometries();
  static const int kGeometriesFieldNumber = 1;
  const ::pbnbg::EdgeBucket& geometries(int index) const;
  ::pbnbg::EdgeBucket* mutable_geometries(int index);
  ::pbnbg::EdgeBucket* add_geometries();
  ::google::protobuf::RepeatedPtrField< ::pbnbg::EdgeBucket >*
      mutable_geometries();
  const ::google::protobuf::RepeatedPtrField< ::pbnbg::EdgeBucket >&
      geometries() const;

  // @@protoc_insertion_point(class_scope:pbnbg.CompressedContainer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pbnbg::EdgeBucket > geometries_;
  mutable int _cached_size_;
  friend struct  protobuf_node_2dbased_2dgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreetNames : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbnbg.StreetNames) */ {
 public:
  StreetNames();
  virtual ~StreetNames();

  StreetNames(const StreetNames& from);

  inline StreetNames& operator=(const StreetNames& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreetNames& default_instance();

  static inline const StreetNames* internal_default_instance() {
    return reinterpret_cast<const StreetNames*>(
               &_StreetNames_default_instance_);
  }

  void Swap(StreetNames* other);

  // implements Message ----------------------------------------------

  inline StreetNames* New() const PROTOBUF_FINAL { return New(NULL); }

  StreetNames* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreetNames& from);
  void MergeFrom(const StreetNames& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreetNames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 name_offsets = 2;
  int name_offsets_size() const;
  void clear_name_offsets();
  static const int kNameOffsetsFieldNumber = 2;
  ::google::protobuf::uint32 name_offsets(int index) const;
  void set_name_offsets(int index, ::google::protobuf::uint32 value);
  void add_name_offsets(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      name_offsets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_name_offsets();

  // string names_packed = 1;
  void clear_names_packed();
  static const int kNamesPackedFieldNumber = 1;
  const ::std::string& names_packed() const;
  void set_names_packed(const ::std::string& value);
  #if LANG_CXX11
  void set_names_packed(::std::string&& value);
  #endif
  void set_names_packed(const char* value);
  void set_names_packed(const char* value, size_t size);
  ::std::string* mutable_names_packed();
  ::std::string* release_names_packed();
  void set_allocated_names_packed(::std::string* names_packed);

  // @@protoc_insertion_point(class_scope:pbnbg.StreetNames)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > name_offsets_;
  mutable int _name_offsets_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr names_packed_;
  mutable int _cached_size_;
  friend struct  protobuf_node_2dbased_2dgraph_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// int32 lat = 1;
inline void Node::clear_lat() {
  lat_ = 0;
}
inline ::google::protobuf::int32 Node::lat() const {
  // @@protoc_insertion_point(field_get:pbnbg.Node.lat)
  return lat_;
}
inline void Node::set_lat(::google::protobuf::int32 value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Node.lat)
}

// int32 lon = 2;
inline void Node::clear_lon() {
  lon_ = 0;
}
inline ::google::protobuf::int32 Node::lon() const {
  // @@protoc_insertion_point(field_get:pbnbg.Node.lon)
  return lon_;
}
inline void Node::set_lon(::google::protobuf::int32 value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Node.lon)
}

// int64 osm_id = 3;
inline void Node::clear_osm_id() {
  osm_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Node::osm_id() const {
  // @@protoc_insertion_point(field_get:pbnbg.Node.osm_id)
  return osm_id_;
}
inline void Node::set_osm_id(::google::protobuf::int64 value) {
  
  osm_id_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Node.osm_id)
}

// bool barrier = 4;
inline void Node::clear_barrier() {
  barrier_ = false;
}
inline bool Node::barrier() const {
  // @@protoc_insertion_point(field_get:pbnbg.Node.barrier)
  return barrier_;
}
inline void Node::set_barrier(bool value) {
  
  barrier_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Node.barrier)
}

// bool traffic_light = 5;
inline void Node::clear_traffic_light() {
  traffic_light_ = false;
}
inline bool Node::traffic_light() const {
  // @@protoc_insertion_point(field_get:pbnbg.Node.traffic_light)
  return traffic_light_;
}
inline void Node::set_traffic_light(bool value) {
  
  traffic_light_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Node.traffic_light)
}

// -------------------------------------------------------------------

// NodeList

// int64 count = 1;
inline void NodeList::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NodeList::count() const {
  // @@protoc_insertion_point(field_get:pbnbg.NodeList.count)
  return count_;
}
inline void NodeList::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.NodeList.count)
}

// repeated .pbnbg.Node nodes = 2;
inline int NodeList::nodes_size() const {
  return nodes_.size();
}
inline void NodeList::clear_nodes() {
  nodes_.Clear();
}
inline const ::pbnbg::Node& NodeList::nodes(int index) const {
  // @@protoc_insertion_point(field_get:pbnbg.NodeList.nodes)
  return nodes_.Get(index);
}
inline ::pbnbg::Node* NodeList::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:pbnbg.NodeList.nodes)
  return nodes_.Mutable(index);
}
inline ::pbnbg::Node* NodeList::add_nodes() {
  // @@protoc_insertion_point(field_add:pbnbg.NodeList.nodes)
  return nodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbnbg::Node >*
NodeList::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:pbnbg.NodeList.nodes)
  return &nodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbnbg::Node >&
NodeList::nodes() const {
  // @@protoc_insertion_point(field_list:pbnbg.NodeList.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// Edge

// int64 source = 1;
inline void Edge::clear_source() {
  source_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Edge::source() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.source)
  return source_;
}
inline void Edge::set_source(::google::protobuf::int64 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.source)
}

// int64 target = 2;
inline void Edge::clear_target() {
  target_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Edge::target() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.target)
  return target_;
}
inline void Edge::set_target(::google::protobuf::int64 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.target)
}

// int64 name_id = 3;
inline void Edge::clear_name_id() {
  name_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Edge::name_id() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.name_id)
  return name_id_;
}
inline void Edge::set_name_id(::google::protobuf::int64 value) {
  
  name_id_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.name_id)
}

// int64 weight = 4;
inline void Edge::clear_weight() {
  weight_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Edge::weight() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.weight)
  return weight_;
}
inline void Edge::set_weight(::google::protobuf::int64 value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.weight)
}

// bool forward = 5;
inline void Edge::clear_forward() {
  forward_ = false;
}
inline bool Edge::forward() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.forward)
  return forward_;
}
inline void Edge::set_forward(bool value) {
  
  forward_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.forward)
}

// bool backward = 6;
inline void Edge::clear_backward() {
  backward_ = false;
}
inline bool Edge::backward() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.backward)
  return backward_;
}
inline void Edge::set_backward(bool value) {
  
  backward_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.backward)
}

// bool roundabout = 7;
inline void Edge::clear_roundabout() {
  roundabout_ = false;
}
inline bool Edge::roundabout() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.roundabout)
  return roundabout_;
}
inline void Edge::set_roundabout(bool value) {
  
  roundabout_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.roundabout)
}

// bool access_restricted = 8;
inline void Edge::clear_access_restricted() {
  access_restricted_ = false;
}
inline bool Edge::access_restricted() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.access_restricted)
  return access_restricted_;
}
inline void Edge::set_access_restricted(bool value) {
  
  access_restricted_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.access_restricted)
}

// bool startpoint = 9;
inline void Edge::clear_startpoint() {
  startpoint_ = false;
}
inline bool Edge::startpoint() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.startpoint)
  return startpoint_;
}
inline void Edge::set_startpoint(bool value) {
  
  startpoint_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.startpoint)
}

// bool is_split = 10;
inline void Edge::clear_is_split() {
  is_split_ = false;
}
inline bool Edge::is_split() const {
  // @@protoc_insertion_point(field_get:pbnbg.Edge.is_split)
  return is_split_;
}
inline void Edge::set_is_split(bool value) {
  
  is_split_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.Edge.is_split)
}

// -------------------------------------------------------------------

// EdgeList

// int64 count = 1;
inline void EdgeList::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EdgeList::count() const {
  // @@protoc_insertion_point(field_get:pbnbg.EdgeList.count)
  return count_;
}
inline void EdgeList::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.EdgeList.count)
}

// repeated .pbnbg.Edge edges = 2;
inline int EdgeList::edges_size() const {
  return edges_.size();
}
inline void EdgeList::clear_edges() {
  edges_.Clear();
}
inline const ::pbnbg::Edge& EdgeList::edges(int index) const {
  // @@protoc_insertion_point(field_get:pbnbg.EdgeList.edges)
  return edges_.Get(index);
}
inline ::pbnbg::Edge* EdgeList::mutable_edges(int index) {
  // @@protoc_insertion_point(field_mutable:pbnbg.EdgeList.edges)
  return edges_.Mutable(index);
}
inline ::pbnbg::Edge* EdgeList::add_edges() {
  // @@protoc_insertion_point(field_add:pbnbg.EdgeList.edges)
  return edges_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbnbg::Edge >*
EdgeList::mutable_edges() {
  // @@protoc_insertion_point(field_mutable_list:pbnbg.EdgeList.edges)
  return &edges_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbnbg::Edge >&
EdgeList::edges() const {
  // @@protoc_insertion_point(field_list:pbnbg.EdgeList.edges)
  return edges_;
}

// -------------------------------------------------------------------

// CompressedEdge

// uint64 node_id = 1;
inline void CompressedEdge::clear_node_id() {
  node_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CompressedEdge::node_id() const {
  // @@protoc_insertion_point(field_get:pbnbg.CompressedEdge.node_id)
  return node_id_;
}
inline void CompressedEdge::set_node_id(::google::protobuf::uint64 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.CompressedEdge.node_id)
}

// int64 weight = 2;
inline void CompressedEdge::clear_weight() {
  weight_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CompressedEdge::weight() const {
  // @@protoc_insertion_point(field_get:pbnbg.CompressedEdge.weight)
  return weight_;
}
inline void CompressedEdge::set_weight(::google::protobuf::int64 value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:pbnbg.CompressedEdge.weight)
}

// -------------------------------------------------------------------

// EdgeBucket

// repeated .pbnbg.CompressedEdge edges = 1;
inline int EdgeBucket::edges_size() const {
  return edges_.size();
}
inline void EdgeBucket::clear_edges() {
  edges_.Clear();
}
inline const ::pbnbg::CompressedEdge& EdgeBucket::edges(int index) const {
  // @@protoc_insertion_point(field_get:pbnbg.EdgeBucket.edges)
  return edges_.Get(index);
}
inline ::pbnbg::CompressedEdge* EdgeBucket::mutable_edges(int index) {
  // @@protoc_insertion_point(field_mutable:pbnbg.EdgeBucket.edges)
  return edges_.Mutable(index);
}
inline ::pbnbg::CompressedEdge* EdgeBucket::add_edges() {
  // @@protoc_insertion_point(field_add:pbnbg.EdgeBucket.edges)
  return edges_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbnbg::CompressedEdge >*
EdgeBucket::mutable_edges() {
  // @@protoc_insertion_point(field_mutable_list:pbnbg.EdgeBucket.edges)
  return &edges_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbnbg::CompressedEdge >&
EdgeBucket::edges() const {
  // @@protoc_insertion_point(field_list:pbnbg.EdgeBucket.edges)
  return edges_;
}

// -------------------------------------------------------------------

// CompressedContainer

// repeated .pbnbg.EdgeBucket geometries = 1;
inline int CompressedContainer::geometries_size() const {
  return geometries_.size();
}
inline void CompressedContainer::clear_geometries() {
  geometries_.Clear();
}
inline const ::pbnbg::EdgeBucket& CompressedContainer::geometries(int index) const {
  // @@protoc_insertion_point(field_get:pbnbg.CompressedContainer.geometries)
  return geometries_.Get(index);
}
inline ::pbnbg::EdgeBucket* CompressedContainer::mutable_geometries(int index) {
  // @@protoc_insertion_point(field_mutable:pbnbg.CompressedContainer.geometries)
  return geometries_.Mutable(index);
}
inline ::pbnbg::EdgeBucket* CompressedContainer::add_geometries() {
  // @@protoc_insertion_point(field_add:pbnbg.CompressedContainer.geometries)
  return geometries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbnbg::EdgeBucket >*
CompressedContainer::mutable_geometries() {
  // @@protoc_insertion_point(field_mutable_list:pbnbg.CompressedContainer.geometries)
  return &geometries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbnbg::EdgeBucket >&
CompressedContainer::geometries() const {
  // @@protoc_insertion_point(field_list:pbnbg.CompressedContainer.geometries)
  return geometries_;
}

// -------------------------------------------------------------------

// StreetNames

// string names_packed = 1;
inline void StreetNames::clear_names_packed() {
  names_packed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StreetNames::names_packed() const {
  // @@protoc_insertion_point(field_get:pbnbg.StreetNames.names_packed)
  return names_packed_.GetNoArena();
}
inline void StreetNames::set_names_packed(const ::std::string& value) {
  
  names_packed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbnbg.StreetNames.names_packed)
}
#if LANG_CXX11
inline void StreetNames::set_names_packed(::std::string&& value) {
  
  names_packed_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbnbg.StreetNames.names_packed)
}
#endif
inline void StreetNames::set_names_packed(const char* value) {
  
  names_packed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbnbg.StreetNames.names_packed)
}
inline void StreetNames::set_names_packed(const char* value, size_t size) {
  
  names_packed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbnbg.StreetNames.names_packed)
}
inline ::std::string* StreetNames::mutable_names_packed() {
  
  // @@protoc_insertion_point(field_mutable:pbnbg.StreetNames.names_packed)
  return names_packed_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StreetNames::release_names_packed() {
  // @@protoc_insertion_point(field_release:pbnbg.StreetNames.names_packed)
  
  return names_packed_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StreetNames::set_allocated_names_packed(::std::string* names_packed) {
  if (names_packed != NULL) {
    
  } else {
    
  }
  names_packed_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), names_packed);
  // @@protoc_insertion_point(field_set_allocated:pbnbg.StreetNames.names_packed)
}

// repeated uint32 name_offsets = 2;
inline int StreetNames::name_offsets_size() const {
  return name_offsets_.size();
}
inline void StreetNames::clear_name_offsets() {
  name_offsets_.Clear();
}
inline ::google::protobuf::uint32 StreetNames::name_offsets(int index) const {
  // @@protoc_insertion_point(field_get:pbnbg.StreetNames.name_offsets)
  return name_offsets_.Get(index);
}
inline void StreetNames::set_name_offsets(int index, ::google::protobuf::uint32 value) {
  name_offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbnbg.StreetNames.name_offsets)
}
inline void StreetNames::add_name_offsets(::google::protobuf::uint32 value) {
  name_offsets_.Add(value);
  // @@protoc_insertion_point(field_add:pbnbg.StreetNames.name_offsets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StreetNames::name_offsets() const {
  // @@protoc_insertion_point(field_list:pbnbg.StreetNames.name_offsets)
  return name_offsets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StreetNames::mutable_name_offsets() {
  // @@protoc_insertion_point(field_mutable_list:pbnbg.StreetNames.name_offsets)
  return &name_offsets_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pbnbg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_node_2dbased_2dgraph_2eproto__INCLUDED
